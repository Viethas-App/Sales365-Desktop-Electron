{"version":3,"file":"default-src_app_sales_components_print-lot_print-lot_module_ts.js","mappings":"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","sources":["./src/app/sales/components/print-lot/print-five-col-lot/print-five-col-lot.component.ts","./src/app/sales/components/print-lot/print-five-col-lot/print-five-col-lot.component.html","./src/app/sales/components/print-lot/print-four-col-lot/print-four-col-lot.component.ts","./src/app/sales/components/print-lot/print-four-col-lot/print-four-col-lot.component.html","./src/app/sales/components/print-lot/print-lot.module.ts","./src/app/sales/components/print-lot/print-one-col-lot/print-one-col-lot.component.ts","./src/app/sales/components/print-lot/print-one-col-lot/print-one-col-lot.component.html","./src/app/sales/components/print-lot/print-three-col-lot/print-three-col-lot.component.ts","./src/app/sales/components/print-lot/print-three-col-lot/print-three-col-lot.component.html","./src/app/sales/components/print-lot/print-two-col-lot/print-two-col-lot.component.ts","./src/app/sales/components/print-lot/print-two-col-lot/print-two-col-lot.component.html"],"sourcesContent":["import { VhComponent } from 'src/app/sales/components/vh-component/vh-component';\r\nimport { VhAlgorithm, VhQuery } from 'ionic-vhframeworks';\r\nimport { Component, OnInit, ChangeDetectorRef, Input, SimpleChanges } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport jsbarcode from 'jsbarcode';\r\nimport printJS from 'print-js';\r\nimport { Platform } from '@ionic/angular';\r\ndeclare var electron: any;\r\n@Component({\r\n  selector: 'app-print-five-col-lot',\r\n  templateUrl: './print-five-col-lot.component.html',\r\n  styleUrls: ['./print-five-col-lot.component.scss']\r\n})\r\nexport class PrintFiveColLotComponent implements OnInit {\r\n  propertySelected: any;\r\n  @Input() stamp: any;\r\n  @Input() start_print : boolean = false\r\n\r\n  listRowBarcode = [{show_col2:false,show_col3:false,show_col4:false,show_col5:false}]; // chứa số hàng hiển thị. true thì hiển thị 2 tem. false là hien thị 1 tem trên 1 hàng\r\n  heightScroll :any;\r\n  constructor(\r\n    private router: Router,\r\n    public vhAlgorithm: VhAlgorithm,\r\n    private cdf: ChangeDetectorRef,\r\n    private vhComponent:VhComponent,\r\n    private vhQuery:VhQuery,\r\n    public platform: Platform\r\n  ) {\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  ngOnChanges({start_print}: SimpleChanges): void {\r\n    if(start_print && start_print.currentValue) {\r\n      this.vhComponent.showLoading('')\r\n      .then(() =>{\r\n       this.stamp.barcode.property =  this.vhAlgorithm.sortNumberbyASC(this.stamp.barcode.property,'index')\r\n       for(let item of this.stamp.barcode.property){\r\n        switch(item.type){\r\n          case 'date_exp': item.value = this.stamp.formProduct.date_exp; break;\r\n          case 'date_mfg': item.value = this.stamp.formProduct.date_mfg; break;\r\n          case 'lot_number': item.value = this.stamp.formProduct.lot_number; break;\r\n          case 'barcode': item.value = this.stamp.formProduct.barcode;break;\r\n          case 'name': item.value = this.stamp.formProduct.name;break;\r\n        }\r\n      }\r\n      this.changeNummber()\r\n       setTimeout(() => {\r\n        this.renderBarcode(); \r\n      }, 1000);\r\n       setTimeout(() => {\r\n         this.vhComponent.hideLoading(0)\r\n         this.printBrowser();\r\n       }, 3000);\r\n      })\r\n     \r\n    }\r\n   }\r\n  changeNummber() {\r\n    /**\r\n     * nếu chia hết cho 5 thì hiện cả 5 tem trên hàng\r\n     * ngược lại => khi push tới hàng cuối cùng thì check i = (number-1)/5 : cột thứ 1  hay = (number-2)/5 : cột thứ 2 hay = (number-3)/5 : cột thứ 3 hay = (number-4)/5 : cột thứ 4\r\n     * \r\n     */\r\n    this.listRowBarcode = []\r\n    for (let i = 0; i < this.stamp.number/5; i++) {\r\n     if(this.stamp.number%5 ==0)  this.listRowBarcode.push({show_col2:true,show_col3:true,show_col4:true,show_col5:true});\r\n     else {\r\n       if(i == (this.stamp.number-1)/5) this.listRowBarcode.push({show_col2:false,show_col3:false,show_col4:false,show_col5:false});\r\n       else if(i == (this.stamp.number-2)/5) this.listRowBarcode.push({show_col2:true,show_col3:false,show_col4:false,show_col5:false});\r\n       else  if(i == (this.stamp.number-3)/5) this.listRowBarcode.push({show_col2:true,show_col3:true,show_col4:false,show_col5:false});\r\n       else  if(i == (this.stamp.number-4)/5) this.listRowBarcode.push({show_col2:true,show_col3:true,show_col4:true,show_col5:false});\r\n       else this.listRowBarcode.push({show_col2:true,show_col3:true,show_col4:true,show_col5:true});\r\n     }\r\n    }\r\n    \r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (document.querySelector(\".barcode\"))\r\n      this.renderBarcode();\r\n  }\r\n  ngAfterViewChecked(): void {\r\n   \r\n    if(document.querySelector('#scroll')) this.heightScroll = document.querySelector('#scroll').clientHeight -32;\r\n    this.cdf.detectChanges();\r\n  }\r\n\r\n  renderBarcode() {\r\n    if(this.stamp.formProduct.barcode)\r\n    jsbarcode(\".barcode\",  this.stamp.formProduct.barcode, {\r\n      displayValue: this.stamp.barcode.property[1].hidden_text,\r\n      fontSize: this.stamp.barcode.property[1].font_size,\r\n      font: \"sans-serif\"\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/sales/dashboard/manage/products/products-list/edit'],{state: this.stamp.barcode})\r\n  }\r\n  Print() {\r\n    if (this.platform.is(\"electron\")) this.printElectron()\r\n    else this.printBrowser()\r\n  }\r\n  printElectron() {\r\n    let html = document.getElementById(\"stamp-barcode-electron\").innerHTML;\r\n    electron.ipcRenderer.send(\"print-start\", {\r\n      html: html,\r\n      deviceName: this.stamp.printer_name,\r\n    });\r\n    electron.ipcRenderer.on(\"print-done\", (event, data) => {\r\n      if (!data) this.vhComponent.alertMessageDesktop('warning', 'Printing failed', 3000)\r\n     \r\n    });\r\n  }\r\n\r\n  printBrowser() {\r\n    printJS({\r\n      printable: \"stamp-barcode\",\r\n      type: \"html\",\r\n      scanStyles: false,\r\n      maxWidth: this.stamp.width,\r\n      style:\r\n        '@page { margin: 0 !important;padding: 0 !important;}' +\r\n        '.stamp {margin-bottom: 3mm; width: ' + this.stamp.width + 'mm;height: ' + (this.stamp.height - 4) + 'mm;}' +\r\n        '.center-all-content { display: flex;align-items: center;justify-content: center;}'\r\n    });\r\n  }\r\n\r\n}\r\n","<div nz-row class=\"row-back medium-size\" (click)=\"goBack()\">\r\n    <i nz-icon nzType=\"left\" nzTheme=\"outline\"></i>{{'Back'|translate}}\r\n</div>\r\n<nz-layout>\r\n    <div nz-row>\r\n        <div nz-col nzSpan=\"18\" class=\"title left-all-content\">\r\n            <b>{{stamp.barcode.name}}</b>\r\n        </div>\r\n        <div nz-col nzSpan=\"6\" class=\"right-all-content\">\r\n            <button class=\"center-all-content\" nz-button nzType=\"default\" (click)=\"printBrowser()\">\r\n                <i nz-icon nzType=\"printer\" nzTheme=\"outline\"></i>\r\n                {{'Print'|translate}} barcode</button>\r\n        </div>\r\n    </div>\r\n    <div nz-row style=\"height: 100%;padding-top: 16px;\" id=\"scroll\">\r\n        <div nz-col nzSpan=\"24\" class=\" center-all-content hideScrollbar\" style=\"overflow: auto;padding-top: 16px;\"\r\n            [ngStyle]=\"{'height.px': heightScroll}\">\r\n            <div id=\"stamp-barcode\" style=\"height: 100%; margin-top: -1.5mm\">\r\n                <div [ngStyle]=\"{'width.mm': stamp.barcode.width*5,'height.mm': stamp.barcode.height -3 ,'margin-bottom':i == listRowBarcode.length -1 ? '0' : ''}\" class=\"stamp mb-6\"\r\n                    style=\"display: flex;margin-left: -1mm;\" *ngFor=\"let item of listRowBarcode, index as i\">\r\n                    <div \r\n                    style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n                    </div>\r\n                    <div  \r\n                        *ngIf=\"item.show_col2\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;overflow: hidden;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col3\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute; \"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                                 \r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col4\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute; \"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col5\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute; \"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div id=\"stamp-barcode-electron\" style=\"margin-top: -1.5mm;display:none;\">\r\n                <div [ngStyle]=\"{'width.mm': stamp.barcode.width*5,'height.mm': stamp.barcode.height -3 ,'margin-bottom':i == listRowBarcode.length -1 ? '0' : ''}\" class=\"stamp mb-6\"\r\n                    style=\"display: flex;margin-left: -1mm;\" *ngFor=\"let item of listRowBarcode, index as i\">\r\n                    <div \r\n                    style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;overflow: hidden;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n                    </div>\r\n                    <div  \r\n                        *ngIf=\"item.show_col2\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;overflow: hidden;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col3\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;overflow: hidden; \"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col4\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;overflow: hidden; \"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col5\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;overflow: hidden;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</nz-layout>","import { VhComponent } from 'src/app/sales/components/vh-component/vh-component';\r\nimport { VhAlgorithm, VhQuery } from 'ionic-vhframeworks';\r\nimport { Component, OnInit, ChangeDetectorRef, Input, SimpleChanges } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport jsbarcode from 'jsbarcode';\r\nimport printJS from 'print-js';\r\nimport { Platform } from '@ionic/angular';\r\ndeclare var electron: any;\r\n@Component({\r\n  selector: 'app-print-four-col-lot',\r\n  templateUrl: './print-four-col-lot.component.html',\r\n  styleUrls: ['./print-four-col-lot.component.scss']\r\n})\r\nexport class PrintFourColLotComponent implements OnInit {\r\n  propertySelected: any;\r\n  @Input() stamp: any;\r\n  @Input() start_print : boolean = false\r\n  listRowBarcode = [{show_col2:false,show_col3:false,show_col4:false}]; // chứa số hàng hiển thị. true thì hiển thị 2 tem. false là hien thị 1 tem trên 1 hàng\r\n  heightScroll :any;\r\n  constructor(\r\n    private router: Router,\r\n    public vhAlgorithm: VhAlgorithm,\r\n    private cdf: ChangeDetectorRef,\r\n    private vhComponent:VhComponent,\r\n    private vhQuery:VhQuery,\r\n    public platform: Platform\r\n  ) {\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n     \r\n  }\r\n  ngOnChanges({start_print}: SimpleChanges): void {\r\n    if(start_print && start_print.currentValue) {\r\n      this.vhComponent.showLoading('')\r\n      .then(() =>{\r\n       this.stamp.barcode.property =  this.vhAlgorithm.sortNumberbyASC(this.stamp.barcode.property,'index')\r\n       for(let item of this.stamp.barcode.property){\r\n        switch(item.type){\r\n          case 'date_exp': item.value = this.stamp.formProduct.date_exp; break;\r\n          case 'date_mfg': item.value = this.stamp.formProduct.date_mfg; break;\r\n          case 'lot_number': item.value = this.stamp.formProduct.lot_number; break;\r\n          case 'barcode': item.value = this.stamp.formProduct.barcode;break;\r\n          case 'name': item.value = this.stamp.formProduct.name;break;\r\n        }\r\n      }\r\n      this.changeNummber()\r\n       setTimeout(() => {\r\n        this.renderBarcode(); \r\n      }, 1000);\r\n       setTimeout(() => {\r\n         this.vhComponent.hideLoading(0)\r\n         this.printBrowser();\r\n       }, 3000);\r\n      })\r\n     \r\n    }\r\n   }\r\n  changeNummber() {\r\n    /**\r\n     * nếu chia hết cho 4 thì hiện cả 4 tem trên hàng\r\n     * ngược lại  => khi push tới hàng cuối cùng thì check i = (number-1)/3 : cột thứ 1  hay = (number-2)/3 : cột thứ 2\r\n     * \r\n     */\r\n    this.listRowBarcode = []\r\n    for (let i = 0; i < this.stamp.number/4; i++) {\r\n      \r\n      \r\n     if(this.stamp.number%4 ==0)  this.listRowBarcode.push({show_col2:true,show_col3:true,show_col4:true});\r\n     else {\r\n       if(i == (this.stamp.number-1)/4) this.listRowBarcode.push({show_col2:false,show_col3:false,show_col4:false});\r\n       else if(i == (this.stamp.number-2)/4) this.listRowBarcode.push({show_col2:true,show_col3:false,show_col4:false});\r\n       else  if(i == (this.stamp.number-3)/4) this.listRowBarcode.push({show_col2:true,show_col3:true,show_col4:false});\r\n       else this.listRowBarcode.push({show_col2:true,show_col3:true,show_col4:true});\r\n     }\r\n    }\r\n    \r\n  }\r\n  ngAfterViewInit(): void {\r\n    if (document.querySelector(\".barcode\"))\r\n      this.renderBarcode();\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    \r\n    if(document.querySelector('#scroll')) this.heightScroll = document.querySelector('#scroll').clientHeight -32;\r\n    this.cdf.detectChanges();\r\n  }\r\n\r\n  renderBarcode() {\r\n    if(this.stamp.formProduct.barcode)\r\n    jsbarcode(\".barcode\",  this.stamp.formProduct.barcode, {\r\n      displayValue: this.stamp.barcode.property[1].hidden_text,\r\n      fontSize: this.stamp.barcode.property[1].font_size,\r\n      font: \"sans-serif\"\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/sales/dashboard/manage/products/products-list/edit'],{state: this.stamp.barcode})\r\n  }\r\n\r\n  Print() {\r\n    if (this.platform.is(\"electron\")) this.printElectron()\r\n    else this.printBrowser()\r\n  }\r\n  printElectron() {\r\n    let html = document.getElementById(\"stamp-barcode-electron\").innerHTML;\r\n    electron.ipcRenderer.send(\"print-start\", {\r\n      html: html,\r\n      deviceName: this.stamp.printer_name,\r\n    });\r\n    electron.ipcRenderer.on(\"print-done\", (event, data) => {\r\n      if (!data) this.vhComponent.alertMessageDesktop('warning', 'Printing failed', 3000)\r\n     \r\n    });\r\n  }\r\n  printBrowser() {\r\n    printJS({\r\n      printable: \"stamp-barcode\",\r\n      type: \"html\",\r\n      scanStyles: false,\r\n      maxWidth: this.stamp.width,\r\n      style:\r\n        '@page { margin: 0 !important;padding: 0 !important;}' +\r\n        '.stamp {margin-bottom: 3mm; width: ' + this.stamp.width + 'mm;height: ' + (this.stamp.height > 20 ? this.stamp.height - 4 : this.stamp.height -2 ) + 'mm;}' +\r\n        '.center-all-content { display: flex;align-items: center;justify-content: center;}'\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<div nz-row class=\"row-back medium-size\" (click)=\"goBack()\">\r\n    <i nz-icon nzType=\"left\" nzTheme=\"outline\"></i>{{'Back'|translate}}\r\n</div>\r\n<nz-layout>\r\n    <div nz-row>\r\n        <div nz-col nzSpan=\"18\" class=\"title left-all-content\">\r\n            <b>{{stamp.barcode.name}}</b>\r\n        </div>\r\n        <div nz-col nzSpan=\"6\" class=\"right-all-content\">\r\n            <button class=\"center-all-content\" nz-button nzType=\"default\" (click)=\"printBrowser()\">\r\n                <i nz-icon nzType=\"printer\" nzTheme=\"outline\"></i>\r\n                {{'Print'|translate}} barcode</button>\r\n        </div>\r\n    </div>\r\n    <div nz-row style=\"height: 100%;padding-top: 16px;\" id=\"scroll\">\r\n        <div nz-col nzSpan=\"24\" class=\" center-all-content hideScrollbar\" style=\"overflow: auto;padding-top: 16px;\"\r\n            [ngStyle]=\"{'height.px': heightScroll}\">\r\n            <div id=\"stamp-barcode\" style=\"height: 100%; margin-top: -1.5mm\">\r\n                <div [ngStyle]=\"{'width.mm': stamp.barcode.width*4,'height.mm': stamp.barcode.height > 20 ?  stamp.barcode.height -3 :  stamp.barcode.height -2,'margin-bottom':i == listRowBarcode.length -1 ? '0' : '' }\" class=\"stamp mb-6\"\r\n                    style=\"display: flex;margin-left: -1mm;\" *ngFor=\"let item of listRowBarcode, index as i\">\r\n                    <div \r\n                        style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\"position: absolute;align-items: center;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n                    </div>\r\n                    <div  \r\n                        *ngIf=\"item.show_col2\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;overflow: hidden;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                           'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                           'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col3\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center; \"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                           'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                           'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col4\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center; \"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                           'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                           'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                             <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div> \r\n                </div>\r\n\r\n            </div>\r\n            <div id=\"stamp-barcode-electron\" style=\"margin-top: -1.5mm;display:none;\">\r\n                <div [ngStyle]=\"{'width.mm': stamp.barcode.width*4,'height.mm': stamp.barcode.height > 20 ?  stamp.barcode.height -3 :  stamp.barcode.height -2,'margin-bottom':i == listRowBarcode.length -1 ? '0' : '' }\" class=\"stamp mb-6\"\r\n                    style=\"display: flex;margin-left: -1mm;\" *ngFor=\"let item of listRowBarcode, index as i\">\r\n                    <div \r\n                        style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\"position: absolute;align-items: center;overflow: hidden;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                             <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n                    </div>\r\n                    <div  \r\n                        *ngIf=\"item.show_col2\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\"position: absolute;align-items: center;overflow: hidden;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                           'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                           'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                             <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col3\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\"position: absolute;align-items: center;overflow: hidden; \"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                           'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                           'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                             <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col4\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\"position: absolute;align-items: center;overflow: hidden; \"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                           'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                           'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                             <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div> \r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</nz-layout>","import { IonicModule } from '@ionic/angular';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PrintOneColLotComponent } from './print-one-col-lot/print-one-col-lot.component';\r\nimport { PrintTwoColLotComponent } from './print-two-col-lot/print-two-col-lot.component';\r\nimport { PrintThreeColLotComponent } from './print-three-col-lot/print-three-col-lot.component';\r\nimport { PrintFourColLotComponent } from './print-four-col-lot/print-four-col-lot.component';\r\nimport { PrintFiveColLotComponent } from './print-five-col-lot/print-five-col-lot.component';\r\nimport { NgZorroAntModule } from 'src/app/ng-zorro-ant.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PrintOneColLotComponent,\r\n    PrintTwoColLotComponent,\r\n    PrintThreeColLotComponent,\r\n    PrintFourColLotComponent,\r\n    PrintFiveColLotComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NgZorroAntModule,\r\n    IonicModule, \r\n    TranslateModule,\r\n  ],\r\n  exports: [\r\n    PrintOneColLotComponent,\r\n    PrintTwoColLotComponent,\r\n    PrintThreeColLotComponent,\r\n    PrintFourColLotComponent,\r\n    PrintFiveColLotComponent]\r\n})\r\nexport class PrintLotModule { }\r\n","import { VhComponent } from 'src/app/sales/components/vh-component/vh-component';\r\nimport { VhAlgorithm, VhQuery } from 'ionic-vhframeworks';\r\nimport { Component, OnInit, ChangeDetectorRef, Input, SimpleChanges } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport jsbarcode from 'jsbarcode';\r\nimport printJS from 'print-js';\r\nimport { Platform } from '@ionic/angular';\r\ndeclare var electron: any;\r\n@Component({\r\n  selector: 'app-print-one-col-lot',\r\n  templateUrl: './print-one-col-lot.component.html',\r\n  styleUrls: ['./print-one-col-lot.component.scss']\r\n})\r\nexport class PrintOneColLotComponent implements OnInit {\r\n\r\n  \r\n  @Input() stamp: any;\r\n  @Input() start_print : boolean = false\r\n  listOfFontSize = [8, 9, 10, 11, 12, 13, 14, 15, 16];\r\n  number = 1;\r\n  listRowBarcode = [false]; // chứa số hàng hiển thị. true thì hiển thị 2 tem. false là hien thị 1 tem trên 1 hàng\r\n  heightScroll: any;\r\n  propertySelected: any;\r\n  constructor(\r\n    private router: Router,\r\n    public vhAlgorithm: VhAlgorithm,\r\n    private cdf: ChangeDetectorRef,\r\n    private vhComponent: VhComponent,\r\n    private vhQuery: VhQuery,\r\n    public platform: Platform\r\n  ) {\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n  \r\n  }\r\n  ngOnChanges({start_print}: SimpleChanges): void {\r\n    if(start_print && start_print.currentValue) {\r\n      this.vhComponent.showLoading('')\r\n      .then(() =>{\r\n       this.stamp.barcode.property =  this.vhAlgorithm.sortNumberbyASC(this.stamp.barcode.property,'index')\r\n       for(let item of this.stamp.barcode.property){\r\n        switch(item.type){\r\n          case 'date_exp': item.value = this.stamp.formProduct.date_exp; break;\r\n          case 'date_mfg': item.value = this.stamp.formProduct.date_mfg; break;\r\n          case 'lot_number': item.value = this.stamp.formProduct.lot_number; break;\r\n          case 'barcode': item.value = this.stamp.formProduct.barcode;break;\r\n          case 'name': item.value = this.stamp.formProduct.name;break;\r\n        }\r\n      }\r\n      this.changeNummber()\r\n       setTimeout(() => {\r\n        this.renderBarcode(); \r\n      }, 1000);\r\n       setTimeout(() => {\r\n         this.vhComponent.hideLoading(0)\r\n         this.printBrowser();\r\n       }, 3000);\r\n      })\r\n     \r\n    }\r\n   }\r\n  changeNummber() {\r\n    this.listRowBarcode = []\r\n    for (let i = 0; i < this.stamp.number; i++) {\r\n      this.listRowBarcode.push(true);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (document.querySelector(\".barcode\"))\r\n      this.renderBarcode();\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n\r\n    if (document.querySelector('#scroll')) this.heightScroll = document.querySelector('#scroll').clientHeight - 32;\r\n    this.cdf.detectChanges();\r\n  }\r\n\r\n  renderBarcode() {\r\n    if (this.stamp.formProduct.barcode)\r\n      jsbarcode(\".barcode\", this.stamp.formProduct.barcode, {\r\n        displayValue: this.stamp.barcode.property[1].hidden_text,\r\n        fontSize: this.stamp.barcode.property[1].font_size,\r\n        font: \"sans-serif\"\r\n      });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/sales/dashboard/manage/products/products-list/edit'], { state: this.stamp.barcode })\r\n  }\r\n  Print() {\r\n    if (this.platform.is(\"electron\")) this.printElectron()\r\n    else this.printBrowser()\r\n  }\r\n  printElectron() {\r\n    let html = document.getElementById(\"stamp-barcode-electron\").innerHTML;\r\n    electron.ipcRenderer.send(\"print-start\", {\r\n      html: html,\r\n      deviceName: this.stamp.printer_name,\r\n    });\r\n    electron.ipcRenderer.on(\"print-done\", (event, data) => {\r\n      if (!data) this.vhComponent.alertMessageDesktop('warning', 'Printing failed', 3000)\r\n\r\n    });\r\n  }\r\n  printBrowser() {\r\n    printJS({\r\n      printable: \"stamp-barcode\",\r\n      type: \"html\",\r\n      scanStyles: false,\r\n      maxWidth: this.stamp.width,\r\n      style:\r\n        '@page { margin: 0 !important;padding: 0 !important;}' +\r\n        '.stamp {margin-bottom: 3mm; width: ' + this.stamp.width + 'mm;height: ' + (this.stamp.height - 4) + 'mm;}' +\r\n        '.center-all-content { display: flex;align-items: center;justify-content: center;}'\r\n    });\r\n  }\r\n\r\n}\r\n","<div nz-row class=\"row-back medium-size\" (click)=\"goBack()\">\r\n    <i nz-icon nzType=\"left\" nzTheme=\"outline\"></i>{{'Back'|translate}}\r\n</div>\r\n<nz-layout>\r\n    <div nz-row>\r\n        <div nz-col nzSpan=\"18\" class=\"title left-all-content\">\r\n            <b>{{stamp.barcode.name}}</b>\r\n        </div>\r\n        <div nz-col nzSpan=\"6\" class=\"right-all-content\">\r\n            <button class=\"center-all-content\" nz-button nzType=\"default\" (click)=\"printBrowser()\">\r\n                <i nz-icon nzType=\"printer\" nzTheme=\"outline\"></i>\r\n                {{'Print'|translate}}</button>\r\n        </div>\r\n    </div>\r\n    <div nz-row style=\"height: 100%;padding-top: 16px;\" id=\"scroll\">\r\n        <div nz-col nzSpan=\"24\" class=\" center-all-content hideScrollbar\" style=\"overflow: auto;padding-top: 16px;\"\r\n            [ngStyle]=\"{'height.px': heightScroll}\">\r\n            <div id=\"stamp-barcode\" style=\"height: 100%;margin-top: -1.5mm;\">\r\n                <div [ngStyle]=\"{'width.mm': stamp.barcode.width*stamp.col,'height.mm': stamp.barcode.height -3 ,'margin-bottom':i == listRowBarcode.length -1 ? '0' : ''}\" class=\"stamp mb-6\"\r\n                    style=\"display: flex;margin-left: -1mm;\" *ngFor=\"let item of listRowBarcode, index as i\">\r\n                    <div [ngStyle]=\"{'width.mm': stamp.barcode.width,'height.mm': stamp.barcode.height -3}\"  style=\"position: relative;\" class=\"border-top\"\r\n                        >\r\n                        <div  \r\n                            *ngFor=\"let pro of stamp.barcode.property, index as idx\"  \r\n                            style=\"position: absolute;overflow: hidden;\"  \r\n                            [ngStyle]=\"{\r\n                            'text-align': pro.text_align,\r\n                            'font-size.px': pro.font_size, \r\n                            'font-weight': pro.font_weight  , \r\n                            'text-decoration': pro.text_decoration ,\r\n                            'font-style': pro.font_style  ,\r\n                            'top.px': pro.type == 'lot_number' && i == listRowBarcode.length -1 ? pro.y -2 : pro.y,\r\n                            'left.px':pro.x,\r\n                            'height.mm': pro.height ,\r\n                            'width.mm': pro.width,\r\n                            'justify-content':pro.type == 'barcode' ? pro.justify_content : '',\r\n                            'z-index':pro.z_index,\r\n                            'display': pro.status ? 'flex' : 'none'\r\n                            }\"\r\n                            \r\n                            >\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                \r\n                                'text-align':pro.text_align,\r\n                                'height.mm': pro.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"pro.type == 'name' || pro.type == 'lot_number' && pro.status\"> <ng-container  *ngIf=\"pro.type == 'lot_number'\">\r\n                                    {{pro.label}} \r\n                                </ng-container>{{pro.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                    'text-align':pro.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  pro.type == 'date_mfg' && pro.status\">{{pro.label}} {{pro.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                    'text-align':pro.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  pro.type == 'date_exp' && pro.status\">{{pro.label}} {{pro.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n                            <canvas [ngStyle]=\"{'height.mm': pro.height,'width.mm': pro.width}\"\r\n                                *ngIf=\"pro.type == 'barcode' && pro.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div id=\"stamp-barcode-electron\" style=\"margin-top: -1.5mm;display:none;\">\r\n                <div [ngStyle]=\"{'width.mm': stamp.barcode.width*stamp.col,'height.mm': stamp.barcode.height -3 ,'margin-bottom':i == listRowBarcode.length -1 ? '0' : ''}\" class=\"stamp mb-6\"\r\n                    style=\"display: flex;margin-left: -1mm;\" *ngFor=\"let item of listRowBarcode, index as i\">\r\n                    <div [ngStyle]=\"{'width.mm': stamp.barcode.width,'height.mm': stamp.barcode.height -3}\"  style=\"position: relative;\" class=\"border-top\"\r\n                        >\r\n                        <div  \r\n                            *ngFor=\"let pro of stamp.barcode.property, index as idx\"  \r\n                            style=\"display: flex;position: absolute;overflow: hidden;align-items: center;overflow: hidden;\"  \r\n                            [ngStyle]=\"{\r\n                            'text-align': pro.text_align,\r\n                            'font-size.px': pro.font_size, \r\n                            'font-weight': pro.font_weight  , \r\n                            'text-decoration': pro.text_decoration ,\r\n                            'font-style': pro.font_style  ,\r\n                            'top.px': pro.type == 'lot_number' && i == listRowBarcode.length -1 ? pro.y -2 : pro.y,\r\n                            'left.px':pro.x,\r\n                            'height.mm': pro.height ,\r\n                            'width.mm': pro.width,\r\n                            'justify-content':pro.type == 'barcode' ? pro.justify_content : '',\r\n                            'z-index':pro.z_index\r\n                            }\"\r\n                            \r\n                            >\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                \r\n                                'text-align':pro.text_align,\r\n                                'height.mm': pro.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"pro.type == 'name' || pro.type == 'lot_number' && pro.status\"> <ng-container  *ngIf=\"pro.type == 'lot_number'\">\r\n                                    {{pro.label}} \r\n                                </ng-container>{{pro.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                    'text-align':pro.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  pro.type == 'date_mfg' && pro.status\">{{pro.label}} {{pro.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                    'text-align':pro.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  pro.type == 'date_exp' && pro.status\">{{pro.label}} {{pro.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n                            <svg [ngStyle]=\"{'height.px': pro.height*3.78,'width.px': pro.width*3.78}\"\r\n                                *ngIf=\"pro.type == 'barcode' && pro.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</nz-layout>","import { VhComponent } from 'src/app/sales/components/vh-component/vh-component';\r\nimport { VhAlgorithm, VhQuery } from 'ionic-vhframeworks';\r\nimport { Component, OnInit, ChangeDetectorRef, Input, SimpleChanges } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport jsbarcode from 'jsbarcode';\r\nimport printJS from 'print-js';\r\nimport { Platform } from '@ionic/angular';\r\ndeclare var electron: any;\r\n@Component({\r\n  selector: 'app-print-three-col-lot',\r\n  templateUrl: './print-three-col-lot.component.html',\r\n  styleUrls: ['./print-three-col-lot.component.scss']\r\n})\r\nexport class PrintThreeColLotComponent implements OnInit {\r\n  propertySelected: any;\r\n  \r\n  @Input() stamp: any;\r\n  @Input() start_print : boolean = false\r\n  listRowBarcode = [{show_col2:false,show_col3:false}]; // chứa số hàng hiển thị. true thì hiển thị 2 tem. false là hien thị 1 tem trên 1 hàng\r\n  heightScroll :any;\r\n  constructor(\r\n    private router: Router,\r\n    public vhAlgorithm: VhAlgorithm,\r\n    private cdf: ChangeDetectorRef,\r\n    private vhComponent:VhComponent,\r\n    private vhQuery:VhQuery,\r\n    public platform: Platform\r\n  ) {\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n     \r\n  }\r\n  ngOnChanges({start_print}: SimpleChanges): void {\r\n    if(start_print && start_print.currentValue) {\r\n      this.vhComponent.showLoading('')\r\n      .then(() =>{\r\n       this.stamp.barcode.property =  this.vhAlgorithm.sortNumberbyASC(this.stamp.barcode.property,'index')\r\n       for(let item of this.stamp.barcode.property){\r\n        switch(item.type){\r\n          case 'date_exp': item.value = this.stamp.formProduct.date_exp; break;\r\n          case 'date_mfg': item.value = this.stamp.formProduct.date_mfg; break;\r\n          case 'lot_number': item.value = this.stamp.formProduct.lot_number; break;\r\n          case 'barcode': item.value = this.stamp.formProduct.barcode;break;\r\n          case 'name': item.value = this.stamp.formProduct.name;break;\r\n        }\r\n      }\r\n      this.changeNummber()\r\n       setTimeout(() => {\r\n        this.renderBarcode(); \r\n      }, 1000);\r\n       setTimeout(() => {\r\n         this.vhComponent.hideLoading(0)\r\n         this.printBrowser();\r\n       }, 3000);\r\n      })\r\n     \r\n    }\r\n   }\r\n  changeNummber() {\r\n    /**\r\n     * nếu chia hết cho 3 thì hiện cả 3 tem trên hàng\r\n     * ngược lại number = 4 => khi push tới hàng cuối cùng thì check i = (number-1)/3 : cột thứ 1  hay = (number-2)/3 : cột thứ 2\r\n     * \r\n     */\r\n    this.listRowBarcode = []\r\n    for (let i = 0; i < this.stamp.number/3; i++) {\r\n     if(this.stamp.number%3 ==0)  this.listRowBarcode.push({show_col2:true,show_col3:true});\r\n     else {\r\n       if(i == (this.stamp.number-1)/3) this.listRowBarcode.push({show_col2:false,show_col3:false});\r\n       else if(i == (this.stamp.number-2)/3) this.listRowBarcode.push({show_col2:true,show_col3:false});\r\n       else this.listRowBarcode.push({show_col2:true,show_col3:true});\r\n     }\r\n    }\r\n    \r\n  }\r\n\r\n  ngAfterViewChecked(): void { \r\n    if(document.querySelector('#scroll')) this.heightScroll = document.querySelector('#scroll').clientHeight -32;\r\n    this.cdf.detectChanges();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (document.querySelector(\".barcode\"))\r\n      this.renderBarcode();\r\n  }\r\n  renderBarcode() {\r\n    if(this.stamp.formProduct.barcode)\r\n    jsbarcode(\".barcode\",  this.stamp.formProduct.barcode, {\r\n      displayValue: this.stamp.barcode.property[1].hidden_text,\r\n      fontSize: this.stamp.barcode.property[1].font_size,\r\n      font: \"sans-serif\"\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/sales/dashboard/manage/products/products-list/edit'],{state: this.stamp.barcode})\r\n  }\r\n\r\n  Print() {\r\n    if (this.platform.is(\"electron\")) this.printElectron()\r\n    else this.printBrowser()\r\n  }\r\n  printElectron() {\r\n    let html = document.getElementById(\"stamp-barcode-electron\").innerHTML;\r\n    electron.ipcRenderer.send(\"print-start\", {\r\n      html: html,\r\n      deviceName: this.stamp.printer_name,\r\n    });\r\n    electron.ipcRenderer.on(\"print-done\", (event, data) => {\r\n      if (!data) this.vhComponent.alertMessageDesktop('warning', 'Printing failed', 3000)\r\n     \r\n    });\r\n  }\r\n  printBrowser() {\r\n    printJS({\r\n      printable: \"stamp-barcode\",\r\n      type: \"html\",\r\n      scanStyles: false,\r\n      maxWidth: this.stamp.width,\r\n      style:\r\n        '@page { margin: 0 !important;padding: 0 !important;}' +\r\n        '.stamp {margin-bottom: 3mm; width: ' + this.stamp.width + 'mm;height: ' + (this.stamp.height - 4) + 'mm;}'  \r\n    });\r\n  }\r\n}\r\n","<div nz-row class=\"row-back medium-size\" (click)=\"goBack()\">\r\n    <i nz-icon nzType=\"left\" nzTheme=\"outline\"></i>{{'Back'|translate}}\r\n</div>\r\n<nz-layout>\r\n    <div nz-row>\r\n        <div nz-col nzSpan=\"18\" class=\"title left-all-content\">\r\n            <b>{{stamp.barcode.name}}</b>\r\n        </div>\r\n        <div nz-col nzSpan=\"6\" class=\"right-all-content\">\r\n            <button class=\"center-all-content\" nz-button nzType=\"default\" (click)=\"printBrowser()\">\r\n                <i nz-icon nzType=\"printer\" nzTheme=\"outline\"></i>\r\n                {{'Print'|translate}} barcode</button>\r\n        </div>\r\n    </div>\r\n    <div nz-row style=\"height: 100%;padding-top: 16px;\" id=\"scroll\">\r\n        <div nz-col nzSpan=\"24\" class=\"hideScrollbar\" style=\"overflow: auto;padding-top: 16px;display: flex;align-items: flex-start;justify-content: center;\"\r\n            [ngStyle]=\"{'height.px': heightScroll}\">\r\n            <div id=\"stamp-barcode\" style=\"margin-top: -1.5mm\">\r\n                <div [ngStyle]=\"{'width.mm': stamp.barcode.width*3,'height.mm': stamp.barcode.height -3 ,'margin-bottom':i == listRowBarcode.length -1 ? '0' : ''}\"  \r\n                    style=\"display: flex;\" *ngFor=\"let item of listRowBarcode, index as i\" [ngClass]=\"{ 'mb-6': i != listRowBarcode.length -1}\" class=\"stamp\">\r\n                    <div \r\n                    style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                             <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n                    </div>\r\n                    <div  \r\n                        *ngIf=\"item.show_col2\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;overflow: hidden;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                             <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col3\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\"position: absolute;align-items: center; \"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                             <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div id=\"stamp-barcode-electron\" style=\"margin-top: -1.5mm;display:none;\">\r\n                <div [ngStyle]=\"{'width.mm': stamp.barcode.width*3,'height.mm': stamp.barcode.height -3 ,'margin-bottom':i == listRowBarcode.length -1 ? '0' : ''}\"  \r\n                    style=\"display: flex;\" *ngFor=\"let item of listRowBarcode, index as i\" [ngClass]=\"{ 'mb-6': i != listRowBarcode.length -1}\" class=\"stamp\">\r\n                    <div \r\n                    style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;overflow: hidden;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                             <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n                    </div>\r\n                    <div  \r\n                        *ngIf=\"item.show_col2\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;overflow: hidden;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                             <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col3\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\"position: absolute;align-items: center;overflow: hidden; \"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" >\r\n                             <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type == 'name' || item.type == 'lot_number' && item.status\"> <ng-container  *ngIf=\"item.type == 'lot_number'\">\r\n                                    {{item.label}} \r\n                                </ng-container>{{item.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_mfg' && item.status\">{{item.label}} {{item.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  item.type == 'date_exp' && item.status\">{{item.label}} {{item.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</nz-layout>","import { VhComponent } from 'src/app/sales/components/vh-component/vh-component';\r\nimport { VhAlgorithm, VhQuery } from 'ionic-vhframeworks';\r\nimport { Component, OnInit, ChangeDetectorRef, Input, SimpleChanges } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport jsbarcode from 'jsbarcode';\r\nimport printJS from 'print-js';\r\nimport { Platform } from '@ionic/angular';\r\ndeclare var electron: any;\r\n@Component({\r\n  selector: 'app-print-two-col-lot',\r\n  templateUrl: './print-two-col-lot.component.html',\r\n  styleUrls: ['./print-two-col-lot.component.scss']\r\n})\r\nexport class PrintTwoColLotComponent implements OnInit {\r\n\r\n  \r\n  @Input() stamp: any;\r\n  @Input() start_print : boolean = false\r\n  listOfFontSize = [8, 9, 10, 11, 12, 13, 14, 15, 16];\r\n  number = 1;\r\n  listRowBarcode = [false]; // chứa số hàng hiển thị. true thì hiển thị 2 tem. false là hien thị 1 tem trên 1 hàng\r\n  heightScroll :any;\r\n  propertySelected: any;\r\n  constructor(\r\n    private router: Router,\r\n    public vhAlgorithm: VhAlgorithm,\r\n    private cdf: ChangeDetectorRef,\r\n    private vhComponent:VhComponent,\r\n    private vhQuery:VhQuery,\r\n    public platform: Platform\r\n  ) {\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n     \r\n  }\r\n  ngOnChanges({start_print}: SimpleChanges): void {\r\n    if(start_print && start_print.currentValue) {\r\n      this.vhComponent.showLoading('')\r\n      .then(() =>{\r\n       this.stamp.barcode.property =  this.vhAlgorithm.sortNumberbyASC(this.stamp.barcode.property,'index')\r\n       for(let item of this.stamp.barcode.property){\r\n        switch(item.type){\r\n          case 'date_exp': item.value = this.stamp.formProduct.date_exp; break;\r\n          case 'date_mfg': item.value = this.stamp.formProduct.date_mfg; break;\r\n          case 'lot_number': item.value = this.stamp.formProduct.lot_number; break;\r\n          case 'barcode': item.value = this.stamp.formProduct.barcode;break;\r\n          case 'name': item.value = this.stamp.formProduct.name;break;\r\n        }\r\n      }\r\n      this.changeNummber()\r\n       setTimeout(() => {\r\n        this.renderBarcode(); \r\n      }, 1000);\r\n       setTimeout(() => {\r\n         this.vhComponent.hideLoading(0)\r\n         this.printBrowser();\r\n       }, 3000);\r\n      })\r\n     \r\n    }\r\n   }\r\n  changeNummber() {\r\n    this.listRowBarcode = []\r\n    for (let i = 0; i < this.stamp.number/2; i++) {\r\n     if(this.stamp.number%2 ==0)  this.listRowBarcode.push(true);\r\n     else {\r\n       if(i == (this.stamp.number-1)/2) this.listRowBarcode.push(false);\r\n       else this.listRowBarcode.push(true);\r\n     }\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (document.querySelector(\".barcode\"))\r\n      this.renderBarcode();\r\n  }\r\n  ngAfterViewChecked(): void { \r\n    if(document.querySelector('#scroll')) this.heightScroll = document.querySelector('#scroll').clientHeight -32;\r\n    this.cdf.detectChanges();\r\n  }\r\n\r\n  renderBarcode() {\r\n    if(this.stamp.formProduct.barcode)\r\n    jsbarcode(\".barcode\",  this.stamp.formProduct.barcode, {\r\n      displayValue: this.stamp.barcode.property[1].hidden_text,\r\n      fontSize: this.stamp.barcode.property[1].font_size,\r\n      font: \"sans-serif\"\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/sales/dashboard/manage/products/products-list/edit'],{state: this.stamp.barcode})\r\n  } \r\n  Print() {\r\n    if (this.platform.is(\"electron\")) this.printElectron()\r\n    else this.printBrowser()\r\n  }\r\n  printElectron() {\r\n    let html = document.getElementById(\"stamp-barcode-electron\").innerHTML;\r\n    electron.ipcRenderer.send(\"print-start\", {\r\n      html: html,\r\n      deviceName: this.stamp.printer_name,\r\n    });\r\n    electron.ipcRenderer.on(\"print-done\", (event, data) => {\r\n      if (!data) this.vhComponent.alertMessageDesktop('warning', 'Printing failed', 3000)\r\n     \r\n    });\r\n  }\r\n  printBrowser() {\r\n    printJS({\r\n      printable: \"stamp-barcode\",\r\n      type: \"html\",\r\n      scanStyles: false,\r\n      maxWidth: this.stamp.width,\r\n      style:\r\n        '@page { margin: 0 !important;padding: 0 !important;}' +\r\n        '.stamp {margin-bottom: 3mm; width: ' + this.stamp.width + 'mm;height: ' + (this.stamp.height - 4) + 'mm;}' +\r\n        '.center-all-content { display: flex;align-items: center;justify-content: center;}'\r\n    });\r\n  }\r\n}\r\n","<div nz-row class=\"row-back medium-size\" (click)=\"goBack()\">\r\n    <i nz-icon nzType=\"left\" nzTheme=\"outline\"></i>{{'Back'|translate}}\r\n</div>\r\n<nz-layout>\r\n    <div nz-row>\r\n        <div nz-col nzSpan=\"18\" class=\"title left-all-content\">\r\n            <b>{{stamp.barcode.name}}</b>\r\n        </div>\r\n        <div nz-col nzSpan=\"6\" class=\"right-all-content\">\r\n            <button class=\"center-all-content\" nz-button nzType=\"default\" (click)=\"printBrowser()\">\r\n                <i nz-icon nzType=\"printer\" nzTheme=\"outline\"></i>\r\n                {{'Print'|translate}}</button>\r\n        </div>\r\n    </div>\r\n    <div nz-row style=\"height: 100%;padding-top: 16px;\" id=\"scroll\">\r\n        <div nz-col nzSpan=\"24\" class=\" center-all-content hideScrollbar\" style=\"overflow: auto;padding-top: 16px;\"\r\n            [ngStyle]=\"{'height.px': heightScroll}\">\r\n            <div id=\"stamp-barcode\" style=\"height: 100%;margin-top: -1.5mm;\">\r\n                <div [ngStyle]=\"{'width.mm': stamp.barcode.width*stamp.col,'height.mm': stamp.barcode.height -3,'margin-bottom':i == listRowBarcode.length -1 ? '0' : '' }\" [ngClass]=\"{'mb-6': i != listRowBarcode.length -1  }\"  class=\"stamp \"\r\n                    style=\"display: flex;margin-left: -1mm;\" *ngFor=\"let item of listRowBarcode, index as i\">\r\n                    <div [ngStyle]=\"{'width.mm': stamp.barcode.width,'height.mm': stamp.barcode.height -3}\"  style=\"position: relative;\" class=\"border-top\"\r\n                        >\r\n                        <div  \r\n                            *ngFor=\"let pro of stamp.barcode.property, index as idx\"  \r\n                            style=\"position: absolute;align-items: center;overflow: hidden;\"  \r\n                            [ngStyle]=\"{\r\n                            'text-align': pro.text_align,\r\n                            'font-size.px': pro.font_size, \r\n                            'font-weight': pro.font_weight  , \r\n                            'text-decoration': pro.text_decoration ,\r\n                            'font-style': pro.font_style  ,\r\n                            'top.px': pro.type == 'price' && i == listRowBarcode.length -1 ? pro.y -2 : pro.y,\r\n                            'left.px':pro.x,\r\n                            'height.mm': pro.height ,\r\n                            'width.mm': pro.width,\r\n                            'justify-content':pro.type == 'barcode' ? pro.justify_content : '',\r\n                            'z-index':pro.z_index,\r\n                            'display': pro.status ? 'flex' : 'none'\r\n                            }\"\r\n                            \r\n                            >\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                \r\n                                'text-align':pro.text_align,\r\n                                'height.mm': pro.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"pro.type == 'name' || pro.type == 'lot_number' && pro.status\"> <ng-container  *ngIf=\"pro.type == 'lot_number'\">\r\n                                    {{pro.label}} \r\n                                </ng-container>{{pro.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                    'text-align':pro.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  pro.type == 'date_mfg' && pro.status\">{{pro.label}} {{pro.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                    'text-align':pro.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  pro.type == 'date_exp' && pro.status\">{{pro.label}} {{pro.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n                            <canvas [ngStyle]=\"{'height.mm': pro.height,'width.mm': pro.width}\"\r\n                                *ngIf=\"pro.type == 'barcode'\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div [ngStyle]=\"{'width.mm': stamp.barcode.width,'height.mm': stamp.barcode.height -3}\" *ngIf=\"item\" style=\"position: relative;\"  class=\"border-top\"\r\n                         >\r\n                        <div  \r\n                            *ngFor=\"let pro of stamp.barcode.property, index as idx\"  \r\n                            style=\"display: flex;position: absolute;align-items: center;overflow: hidden;\" \r\n                             [ngStyle]=\"{\r\n                             'text-align': pro.text_align,\r\n                             'font-size.px': pro.font_size, \r\n                             'font-weight': pro.font_weight  , \r\n                             'text-decoration': pro.text_decoration ,\r\n                             'font-style': pro.font_style  ,\r\n                             'top.px': pro.type == 'price' && i == listRowBarcode.length -1 ? pro.y -2 : pro.y,\r\n                             'left.px':pro.x,\r\n                             'height.mm': pro.height ,\r\n                             'width.mm': pro.width,\r\n                             'justify-content':pro.type == 'barcode' ? pro.justify_content : '',\r\n                             'z-index':pro.z_index,\r\n                             'display': pro.status ? 'flex' : 'none'\r\n                             }\" >\r\n                             <span [ngStyle]=\"{\r\n                                'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                \r\n                                'text-align':pro.text_align,\r\n                                'height.mm': pro.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"pro.type == 'name' || pro.type == 'lot_number' && pro.status\"> <ng-container  *ngIf=\"pro.type == 'lot_number'\">\r\n                                    {{pro.label}} \r\n                                </ng-container>{{pro.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                    'text-align':pro.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  pro.type == 'date_mfg' && pro.status\">{{pro.label}} {{pro.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                    'text-align':pro.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  pro.type == 'date_exp' && pro.status\">{{pro.label}} {{pro.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n                             <canvas [ngStyle]=\"{'height.mm': pro.height,'width.mm': pro.width}\"\r\n                                 *ngIf=\"pro.type == 'barcode'\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div id=\"stamp-barcode-electron\" style=\"margin-top: -1.5mm;display:none;\">\r\n                <div [ngStyle]=\"{'width.mm': stamp.barcode.width*stamp.col,'height.mm': stamp.barcode.height -3,'margin-bottom':i == listRowBarcode.length -1 ? '0' : '' }\" [ngClass]=\"{'mb-6': i != listRowBarcode.length -1  }\"  class=\"stamp \"\r\n                    style=\"display: flex;margin-left: -1mm;\" *ngFor=\"let item of listRowBarcode, index as i\">\r\n                    <div [ngStyle]=\"{'width.mm': stamp.barcode.width,'height.mm': stamp.barcode.height -3}\"  style=\"position: relative;\" class=\"border-top\"\r\n                        >\r\n                        <div  \r\n                            *ngFor=\"let pro of stamp.barcode.property, index as idx\"  \r\n                            style=\"display: flex;position: absolute;align-items: center;overflow: hidden;\"  \r\n                            [ngStyle]=\"{\r\n                            'text-align': pro.text_align,\r\n                            'font-size.px': pro.font_size, \r\n                            'font-weight': pro.font_weight  , \r\n                            'text-decoration': pro.text_decoration ,\r\n                            'font-style': pro.font_style  ,\r\n                            'top.px': pro.type == 'price' && i == listRowBarcode.length -1 ? pro.y -2 : pro.y,\r\n                            'left.px':pro.x,\r\n                            'height.mm': pro.height ,\r\n                            'width.mm': pro.width,\r\n                            'justify-content':pro.type == 'barcode' ? pro.justify_content : '',\r\n                            'z-index':pro.z_index,\r\n                            'display': pro.status ? 'flex' : 'none'\r\n                            }\"\r\n                            \r\n                            >\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                \r\n                                'text-align':pro.text_align,\r\n                                'height.mm': pro.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"pro.type == 'name' || pro.type == 'lot_number' && pro.status\"> <ng-container  *ngIf=\"pro.type == 'lot_number'\">\r\n                                    {{pro.label}} \r\n                                </ng-container>{{pro.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                    'text-align':pro.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  pro.type == 'date_mfg' && pro.status\">{{pro.label}} {{pro.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                    'text-align':pro.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  pro.type == 'date_exp' && pro.status\">{{pro.label}} {{pro.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n                            <svg [ngStyle]=\"{'height.mm': pro.height,'width.mm': pro.width}\"\r\n                                *ngIf=\"pro.type == 'barcode'\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div [ngStyle]=\"{'width.mm': stamp.barcode.width,'height.mm': stamp.barcode.height -3}\" *ngIf=\"item\" style=\"position: relative;\"  class=\"border-top\"\r\n                         >\r\n                        <div  \r\n                            *ngFor=\"let pro of stamp.barcode.property, index as idx\"  \r\n                            style=\"display: flex;position: absolute;align-items: center;overflow: hidden;\" \r\n                             [ngStyle]=\"{\r\n                             'text-align': pro.text_align,\r\n                             'font-size.px': pro.font_size, \r\n                             'font-weight': pro.font_weight  , \r\n                             'text-decoration': pro.text_decoration ,\r\n                             'font-style': pro.font_style  ,\r\n                             'top.px': pro.type == 'price' && i == listRowBarcode.length -1 ? pro.y -2 : pro.y,\r\n                             'left.px':pro.x,\r\n                             'height.mm': pro.height ,\r\n                             'width.mm': pro.width,\r\n                             'justify-content':pro.type == 'barcode' ? pro.justify_content : '',\r\n                             'z-index':pro.z_index,\r\n                             'display': pro.status ? 'flex' : 'none'\r\n                             }\" >\r\n                             <span [ngStyle]=\"{\r\n                                'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                \r\n                                'text-align':pro.text_align,\r\n                                'height.mm': pro.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"pro.type == 'name' || pro.type == 'lot_number' && pro.status\"> <ng-container  *ngIf=\"pro.type == 'lot_number'\">\r\n                                    {{pro.label}} \r\n                                </ng-container>{{pro.value}}</span>\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                    'text-align':pro.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  pro.type == 'date_mfg' && pro.status\">{{pro.label}} {{pro.value | date :\r\n                                    'dd/MM/yyyy'}}</span>\r\n\r\n                                <span [ngStyle]=\"{\r\n                                    'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                    'text-align':pro.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                    *ngIf=\"  pro.type == 'date_exp' && pro.status\">{{pro.label}} {{pro.value | date :\r\n                                        'dd/MM/yyyy'}}</span>\r\n                             <svg [ngStyle]=\"{'height.mm': pro.height,'width.mm': pro.width}\"\r\n                                 *ngIf=\"pro.type == 'barcode'\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div> \r\n    </div>\r\n</nz-layout>"],"names":[],"sourceRoot":"webpack:///"}