{"version":3,"file":"src_app_sales_menu_manage_products_print-barcode_print-barcode_module_ts.js","mappings":"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","sources":["./src/app/sales/menu/manage/products/print-barcode/detail/detail.component.ts","./src/app/sales/menu/manage/products/print-barcode/detail/detail.component.html","./src/app/sales/menu/manage/products/print-barcode/print-barcode.component.ts","./src/app/sales/menu/manage/products/print-barcode/print-barcode.component.html","./src/app/sales/menu/manage/products/print-barcode/print-barcode.module.ts","./src/app/sales/menu/manage/products/print-barcode/print-five-col/print-five-col.component.ts","./src/app/sales/menu/manage/products/print-barcode/print-five-col/print-five-col.component.html","./src/app/sales/menu/manage/products/print-barcode/print-four-col/print-four-col.component.ts","./src/app/sales/menu/manage/products/print-barcode/print-four-col/print-four-col.component.html","./src/app/sales/menu/manage/products/print-barcode/print-one-col/print-one-col.component.ts","./src/app/sales/menu/manage/products/print-barcode/print-one-col/print-one-col.component.html","./src/app/sales/menu/manage/products/print-barcode/print-three-col/print-three-col.component.ts","./src/app/sales/menu/manage/products/print-barcode/print-three-col/print-three-col.component.html","./src/app/sales/menu/manage/products/print-barcode/print-two-col/print-two-col.component.ts","./src/app/sales/menu/manage/products/print-barcode/print-two-col/print-two-col.component.html"],"sourcesContent":["import { LanguageService } from 'src/app/sales/services/language.service';\r\nimport { VhComponent } from 'src/app/sales/components/vh-component/vh-component';\r\nimport { VhAlgorithm, VhQuery } from 'ionic-vhframeworks';\r\nimport { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport jsbarcode from 'jsbarcode';\r\nimport printJS from 'print-js';\r\nimport { CdkDragEnd } from '@angular/cdk/drag-drop';\r\n@Component({\r\n  selector: 'app-detail',\r\n  templateUrl: './detail.component.html',\r\n  styleUrls: ['./detail.component.scss']\r\n})\r\nexport class DetailComponent implements OnInit {\r\n  listUpdateCoor =[]\r\n  stamp: any;\r\n  listOfFontSize = [8, 9, 10, 11, 12, 13, 14, 15, 16,18,20,22,24,26,28,32,36,48,72];\r\n  propertySelected: any;\r\n  number = 10;\r\n  col = 2;\r\n  showModalPrintBarcode = false\r\n  listRowBarcode = [false]; // chứa số hàng hiển thị. true thì hiển thị 2 tem. false là hien thị 1 tem trên 1 hàng\r\n  heightScroll :any;\r\n  distanceParent : number\r\n  white_space : boolean = true\r\n  constructor(\r\n    private router: Router,\r\n    public vhAlgorithm: VhAlgorithm,\r\n    private cdf: ChangeDetectorRef,\r\n    private vhComponent:VhComponent,\r\n    private vhQuery:VhQuery,\r\n    private languageService:LanguageService\r\n  ) {\r\n    this.stamp = this.router.getCurrentNavigation().extras.state;\r\n    this.stamp.property = this.vhAlgorithm.sortNumberbyASC(this.stamp.property,'index')\r\n    this.propertySelected = this.stamp.property[0]\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.listUpdateCoor =[\r\n      {\r\n        type : 'name',\r\n        y: this.stamp.property[0].y\r\n      },\r\n      {\r\n        type : 'barcode',\r\n        y: this.stamp.property[1].y\r\n      },\r\n      {\r\n        type : 'barcode-text',\r\n        y: this.stamp.property[2].y\r\n      },\r\n      {\r\n        type : 'price',\r\n        y: this.stamp.property[3].y\r\n      }\r\n    ]\r\n    this.white_space = this.propertySelected.white_space == 'normal' ? true : false\r\n  }\r\n \r\n  ngAfterViewInit(): void {\r\n    //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\r\n    //Add 'implements AfterViewInit' to the class.\r\n    this.distanceParent = document.getElementById('boundary').getBoundingClientRect().top; \r\n    if (document.querySelector(\".barcode\"))\r\n      this.renderBarcode(this.stamp.property[2].value);\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    \r\n    if(document.querySelector('#scroll')) this.heightScroll = document.querySelector('#scroll').clientHeight -16;\r\n    this.cdf.detectChanges();\r\n  }\r\n\r\n  changeBarcode(){\r\n    if(this.propertySelected.type == 'barcode' || this.propertySelected.type == 'barcode-text') {\r\n      this.renderBarcode(this.propertySelected.value);\r\n      this.stamp.property[2].value = this.propertySelected.value;\r\n      this.stamp.property[1].value = this.propertySelected.value\r\n    }\r\n  }\r\n\r\n  renderBarcode(value) {\r\n    \r\n    \r\n    jsbarcode(\".barcode\", value, {\r\n      displayValue: false,\r\n      // height: 65\r\n    });\r\n  }\r\n\r\n  changeWhiteSpace(event){\r\n    this.propertySelected.white_space = event ? 'normal' :  'nowrap'\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/sales/dashboard/manage/design-barcode'])\r\n  }\r\n\r\n  save() {  \r\n    this.vhComponent.showLoading('').then(() => {\r\n      this.vhQuery.updateDoc(\"barcode_designs\", this.stamp._id, {property : [{ \r\n        type: 'name',\r\n        font_size: this.stamp.property[0].font_size,\r\n        text_align: this.stamp.property[0].text_align,\r\n        status: this.stamp.property[0].status, \r\n        font_weight: this.stamp.property[0].font_weight,\r\n        font_style: this.stamp.property[0].font_style,\r\n        text_decoration: this.stamp.property[0].text_decoration,  \r\n        white_space : this.stamp.property[0].white_space,\r\n        y: this.listUpdateCoor[0].y , \r\n        height: this.stamp.property[0].height,\r\n        value :this.stamp.property[0].value,\r\n        index : 0,\r\n      },\r\n      {\r\n        type: 'barcode',\r\n        font_size: this.stamp.property[1].font_size,\r\n        text_align: this.stamp.property[1].text_align,\r\n        status: this.stamp.property[1].status, \r\n        font_weight: this.stamp.property[1].font_weight,\r\n        font_style: this.stamp.property[1].font_style,\r\n        text_decoration: this.stamp.property[1].text_decoration,  \r\n        white_space : this.stamp.property[1].white_space,\r\n        y:  this.listUpdateCoor[1].y,\r\n        width: this.stamp.property[1].width,\r\n        height: this.stamp.property[1].height,\r\n        value :this.stamp.property[1].value,\r\n        index : 1,\r\n        justify_content : this.stamp.property[1].justify_content,\r\n      },\r\n      {\r\n        type: 'barcode-text',\r\n        font_size: this.stamp.property[2].font_size,\r\n        text_align: this.stamp.property[2].text_align,\r\n        status: this.stamp.property[2].status, \r\n        font_weight: this.stamp.property[2].font_weight,\r\n        font_style: this.stamp.property[2].font_style,\r\n        text_decoration: this.stamp.property[2].text_decoration,  \r\n        white_space :  this.stamp.property[2].white_space,\r\n        y: this.listUpdateCoor[2].y,\r\n        height: this.stamp.property[2].height,\r\n        value :this.stamp.property[2].value,\r\n        index : 2,\r\n        \r\n      },\r\n      {\r\n        type: 'price',\r\n        font_size: this.stamp.property[3].font_size,\r\n        text_align: this.stamp.property[3].text_align,\r\n        status: this.stamp.property[3].status, \r\n        font_weight: this.stamp.property[3].font_weight,\r\n        font_style: this.stamp.property[3].font_style,\r\n        text_decoration: this.stamp.property[3].text_decoration,  \r\n        white_space :  this.stamp.property[3].white_space,\r\n        y:  this.listUpdateCoor[3].y,\r\n        height: this.stamp.property[3].height,\r\n        value :this.stamp.property[3].value,\r\n        index : 3,\r\n      }] }).then((bool) => {\r\n        this.vhComponent.hideLoading(0);\r\n        setTimeout(() => {\r\n          this.goBack()\r\n        }, 200);\r\n      }, error => {\r\n        this.vhComponent.hideLoading(0);\r\n        \r\n      })\r\n    })\r\n  }\r\n\r\n  printBrowser() {\r\n    printJS({\r\n      printable: \"stamp-test\",\r\n      type: \"html\",\r\n      scanStyles: false,\r\n      maxWidth: this.stamp.width,\r\n      style:\r\n        '@page { margin: 0 !important;padding: 0 !important;}' +\r\n        '.stamp { width: ' + this.stamp.width + 'mm;height: ' + (this.stamp.height - 3) + 'mm;}' +\r\n        '.center-all-content { display: flex;align-items: center;justify-content: center;}'\r\n    });\r\n  }\r\n\r\n  value =3.78\r\n\r\n   //lấy tọa độ x y sau khi thực hiện kéo thả và lưu tọa độ mới\r\n   onDragEnded(event: CdkDragEnd, item) {\r\n    \r\n    // let coordinates = event.source.getFreeDragPosition();//json chứa tọa độ x,y sau khi kéo thả \r\n    //  coordinates = { //lấy tọa độ mới của thiết bị ngữ cảnh\r\n    //   x: ( coordinates.x /  this.stamp.height) + item.x,\r\n    //   y: ( coordinates.y /  (this.stamp.height)) + item.y //cộng thêm tọa độ cũ\r\n    // }\r\n    switch(item.type){\r\n      case 'name' :{\r\n        this.listUpdateCoor[0].y = document.getElementById(item.type).getBoundingClientRect().top - this.distanceParent ;\r\n        break;\r\n      }\r\n      case 'barcode' :{\r\n        this.listUpdateCoor[1].y =document.getElementById(item.type).getBoundingClientRect().top - this.distanceParent \r\n        break;\r\n      }\r\n      case 'barcode-text' :{\r\n        this.listUpdateCoor[2].y = document.getElementById(item.type).getBoundingClientRect().top - this.distanceParent \r\n        break;\r\n      }\r\n      case 'price' :{\r\n        this.listUpdateCoor[3].y = document.getElementById(item.type).getBoundingClientRect().top - this.distanceParent \r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  gotoPrintBarcode(){\r\n    this.stamp.property = [{ \r\n      type: 'name',\r\n      font_size: this.stamp.property[0].font_size,\r\n      text_align: this.stamp.property[0].text_align,\r\n      status: this.stamp.property[0].status, \r\n      font_weight: this.stamp.property[0].font_weight,\r\n      font_style: this.stamp.property[0].font_style,\r\n      text_decoration: this.stamp.property[0].text_decoration,  \r\n      white_space : this.stamp.property[0].white_space,\r\n      y: this.listUpdateCoor[0].y , \r\n      height: this.stamp.property[0].height,\r\n      value :this.stamp.property[0].value,\r\n      index : 0,\r\n    },\r\n    {\r\n      type: 'barcode',\r\n      font_size: this.stamp.property[1].font_size,\r\n      text_align: this.stamp.property[1].text_align,\r\n      status: this.stamp.property[1].status, \r\n      font_weight: this.stamp.property[1].font_weight,\r\n      font_style: this.stamp.property[1].font_style,\r\n      text_decoration: this.stamp.property[1].text_decoration,  \r\n      white_space : this.stamp.property[1].white_space,\r\n      y:  this.listUpdateCoor[1].y,\r\n      width: this.stamp.property[1].width,\r\n      height: this.stamp.property[1].height,\r\n      value :this.stamp.property[1].value,\r\n      index : 1,\r\n      justify_content : this.stamp.property[1].justify_content,\r\n    },\r\n    {\r\n      type: 'barcode-text',\r\n      font_size: this.stamp.property[2].font_size,\r\n      text_align: this.stamp.property[2].text_align,\r\n      status: this.stamp.property[2].status, \r\n      font_weight: this.stamp.property[2].font_weight,\r\n      font_style: this.stamp.property[2].font_style,\r\n      text_decoration: this.stamp.property[2].text_decoration,  \r\n      white_space :  this.stamp.property[2].white_space,\r\n      y: this.listUpdateCoor[2].y,\r\n      height: this.stamp.property[2].height,\r\n      value :this.stamp.property[2].value,\r\n      index : 2,\r\n      \r\n    },\r\n    {\r\n      type: 'price',\r\n      font_size: this.stamp.property[3].font_size,\r\n      text_align: this.stamp.property[3].text_align,\r\n      status: this.stamp.property[3].status, \r\n      font_weight: this.stamp.property[3].font_weight,\r\n      font_style: this.stamp.property[3].font_style,\r\n      text_decoration: this.stamp.property[3].text_decoration,  \r\n      white_space :  this.stamp.property[3].white_space,\r\n      y:  this.listUpdateCoor[3].y,\r\n      height: this.stamp.property[3].height,\r\n      value :this.stamp.property[3].value,\r\n      index : 3,\r\n    }]\r\n    // this.router.navigate(['/sales/dashboard/manage/products/products-list/print-two-col'], { state:{col: this.col,number : this.number,barcode:  this.list_barcode[this.list_barcode.findIndex(item => item._id == this.radioValue)], formProduct: {...this.ProductForm.value,_id:this.data.formProduct._id}} })\r\n    switch(this.col){\r\n      case 1:{\r\n        this.router.navigate(['/sales/dashboard/manage/design-barcode/print-one-col'], { state:{ col: this.col,number : this.number,barcode:   this.stamp, formProduct: { name : this.stamp.property[0].value, barcode : this.stamp.property[1].value,price: this.stamp.property[3].value}} })\r\n        break;\r\n      }\r\n      case 2:{\r\n        this.router.navigate(['/sales/dashboard/manage/design-barcode/print-two-col'], { state:{ col: this.col,number : this.number,barcode:   this.stamp, formProduct: { name : this.stamp.property[0].value, barcode : this.stamp.property[1].value,price: this.stamp.property[3].value}} })\r\n        break;\r\n      }\r\n      case 3:{\r\n        this.router.navigate(['/sales/dashboard/manage/design-barcode/print-three-col'], { state:{ col: this.col,number : this.number,barcode: this.stamp, formProduct: { name : this.stamp.property[0].value, barcode : this.stamp.property[1].value,price: this.stamp.property[3].value}} })\r\n        break;\r\n      }\r\n      case 4:{\r\n        this.router.navigate(['/sales/dashboard/manage/design-barcode/print-four-col'], { state:{ col: this.col,number : this.number,barcode: this.stamp, formProduct: { name : this.stamp.property[0].value, barcode : this.stamp.property[1].value,price: this.stamp.property[3].value}} })\r\n        break;\r\n      }\r\n      case 5:{\r\n        this.router.navigate(['/sales/dashboard/manage/design-barcode/print-five-col'], { state:{ col: this.col,number : this.number,barcode: this.stamp, formProduct: { name : this.stamp.property[0].value, barcode : this.stamp.property[1].value,price: this.stamp.property[3].value}} })\r\n        break;\r\n      }\r\n      default :{\r\n        this.vhComponent.alertMessageDesktop( \"error\",this.languageService.translate(\"Không hỗ trợ kiểu tem này\"))\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  \r\n}\r\n","<div nz-row class=\"row-back medium-size\" (click)=\"goBack()\">\r\n    <i nz-icon nzType=\"left\" nzTheme=\"outline\"></i>{{'Back'|translate}}\r\n</div>\r\n<nz-layout>\r\n    <div nz-row>\r\n        <div nz-col nzSpan=\"18\" class=\" left-all-content\">\r\n            <b class=\"title\">{{stamp.name}}</b> <span> - {{'Label size' | translate}}: {{stamp.width}}mm x {{stamp.height}}mm</span>\r\n        </div>\r\n    </div>\r\n    <div nz-row style=\"background: #f0f2f5;\">\r\n        <div nz-col nzSpan=\"24\" class=\"left-all-content\">\r\n            <nz-select style=\"width: 60px;\" class=\"font-text-size\" nzMode=\"default\" nzPlaceHolder=\"Kích thước phông chữ\" [(ngModel)]=\"propertySelected.font_size\">\r\n                <nz-option *ngFor=\"let option of listOfFontSize\" [nzLabel]=\"option\" [nzValue]=\"option\"></nz-option>\r\n            </nz-select> |\r\n            <div class=\"right-all-content\" [ngStyle]=\"{'opacity': propertySelected.type == 'barcode' ? '0.5' : '1'}\">\r\n                <button class=\"font-text-btn font-text-btn-bold\" nz-button [disabled]=\" propertySelected.type == 'barcode'\" [nzType]=\"propertySelected.font_weight == 'bold' ? 'primary': 'default'\" (click)=\"propertySelected.font_weight =  propertySelected.font_weight == 'bold' ? '500' : 'bold'; \">B</button>\r\n                <button class=\"font-text-btn font-text-btn-italic\" nz-button [disabled]=\" propertySelected.type == 'barcode'\" [nzType]=\"propertySelected.font_style == 'italic' ? 'primary': 'default'\" (click)=\"propertySelected.font_style =  propertySelected.font_style  == 'normal' ? 'italic' :'normal' \"><i\r\n                        nz-icon nzType=\"italic\" nzTheme=\"outline\"></i></button>\r\n                <button class=\"font-text-btn font-text-btn-underline\" nz-button [disabled]=\" propertySelected.type == 'barcode'\" [nzType]=\"propertySelected.text_decoration == 'underline' ? 'primary': 'default'\" (click)=\"propertySelected.text_decoration =  propertySelected.text_decoration == 'none'? 'underline' :'none' \">\r\n                    <i nz-icon nzType=\"underline\" nzTheme=\"outline\"></i></button>\r\n            </div>|\r\n            <div class=\"right-all-content\">\r\n                <button class=\"font-text-btn\" nz-button [nzType]=\"propertySelected.text_align == 'left' ? 'primary': 'default'\" (click)=\"propertySelected.text_align = 'left'; propertySelected.justify_content = 'left'\">\r\n                    <i nz-icon nzType=\"align-left\" nzTheme=\"outline\"></i>\r\n                </button>\r\n                <button class=\"font-text-btn\" nz-button [nzType]=\"propertySelected.text_align == 'center' ? 'primary': 'default'\" (click)=\"propertySelected.text_align = 'center'; propertySelected.justify_content = 'center'\">\r\n                    <i nz-icon nzType=\"align-center\" nzTheme=\"outline\"></i>\r\n                </button>\r\n                <button class=\"font-text-btn\" nz-button [nzType]=\"propertySelected.text_align == 'right' ? 'primary': 'default'\" (click)=\"propertySelected.text_align = 'right'; propertySelected.justify_content = 'right'\">\r\n                    <i nz-icon nzType=\"align-right\" nzTheme=\"outline\"></i>\r\n                </button>\r\n                <button class=\"font-text-btn center-all-content\" nz-button [disabled]=\" propertySelected.type == 'barcode'\" [nzType]=\"propertySelected.text_align == 'justify' ? 'primary': 'default'\" (click)=\"propertySelected.text_align = 'justify'\">\r\n                    <ion-icon [color]=\"propertySelected.text_align == 'justify' ? 'white' :'black'\"\r\n                        style=\"font-size: 1.2rem;\" src=\"assets/icon/management/design-barcode/icon-text-justify.svg\">\r\n                    </ion-icon>\r\n                </button>\r\n            </div> |\r\n            <label style=\"margin-left: 8px;\" nz-checkbox [(ngModel)]=\"white_space\" [nzDisabled]=\"propertySelected.type == 'barcode'\" (ngModelChange)=\"changeWhiteSpace($event)\">{{'Allow down the line' | translate}}</label> |\r\n            <label nz-checkbox [(ngModel)]=\"propertySelected.status\">{{'Display' | translate}}</label>\r\n        </div>\r\n\r\n    </div>\r\n    <div nz-row style=\"background: #f0f2f5;padding: 8px;\">\r\n        <div nz-col nzSpan=\"8\" class=\"beetween-all-content\" style=\"justify-content: space-between;\">\r\n            <button style=\"margin-right: 16px;\" class=\"center-all-content\" nz-button nzType=\"default\" (click)=\"printBrowser();propertySelected = {}\">\r\n                <i nz-icon nzType=\"eye\" nzTheme=\"outline\"></i>\r\n                {{'View'|translate}}</button>\r\n            <button style=\"margin-right: 16px;\" class=\"center-all-content\" nz-button nzType=\"default\" (click)=\"showModalPrintBarcode = true;propertySelected = {}\">\r\n                <i nz-icon nzType=\"printer\" nzTheme=\"outline\"></i>\r\n                {{'Print'|translate}} barcode</button>\r\n            <button class=\"btn-add center-all-content\" nz-button nzType=\"default\" (click)=\"save()\">\r\n                <i nz-icon nzType=\"save\" nzTheme=\"outline\"></i>\r\n                {{'Save'|translate}}</button> |\r\n        </div>\r\n        <div nz-col nzSpan=\"16\" class=\"beetween-all-content\">\r\n            <span>{{'Enter value' | translate}}:</span>\r\n            <input style=\"width: 150px;padding: 8px \" nz-input type=\"text\" [(ngModel)]=\"propertySelected.value\" (blur)=\"changeBarcode()\">\r\n            <span>|</span>\r\n            <span *ngIf=\"propertySelected.type == 'barcode'\">{{'Length' | translate}}:</span>\r\n            <input *ngIf=\"propertySelected.type == 'barcode'\" style=\"width: 60px;padding: 8px 0 8px 8px;\" nz-input type=\"number\" [max]=\"stamp.width\" [(ngModel)]=\"propertySelected.width\">\r\n            <span *ngIf=\"propertySelected.type == 'barcode'\">mm |</span>\r\n            <span>{{'Width' | translate}}:</span>\r\n            <input style=\"width: 60px;padding: 8px 0 8px 8px;\" nz-input type=\"number\" [max]=\"stamp.height\" [(ngModel)]=\"propertySelected.height\"> mm\r\n        </div> \r\n\r\n    </div>\r\n    <div nz-row style=\"height: 100%;padding-top: 16px;\" id=\"scroll\">\r\n        <div nz-col nzSpan=\"24\" class=\" center-all-content hideScrollbar\" style=\"overflow: auto;    padding-top: 16px;\" [ngStyle]=\"{'height.px': heightScroll}\" (click)=\"propertySelected = {}\">\r\n            <div id=\"stamp-test\" style=\"height: 100%;margin-top: -1.5mm;margin-left:0.05in;z-index: 2;\">\r\n                <div [ngStyle]=\"{'width.mm': stamp.width ,'height.mm': stamp.height}\" class=\"stamp\">\r\n                    <div [ngStyle]=\"{'width.mm': stamp.width,'height.mm': stamp.height  }\"   style=\"position: relative;overflow: hidden;\">\r\n                        <div [id]=\"item.type\" [ngClass]=\"{'selected': item == propertySelected}\" *ngFor=\"let item of stamp.property\" (click)=\"propertySelected = item;white_space = this.propertySelected.white_space == 'normal' ? true : false;$event.stopPropagation()\" style=\"display: flex;position: absolute;\"\r\n                              [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.y,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': stamp.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : ''\r\n                            }\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                                \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\" style=\" overflow: hidden;line-height: 1;width: 100%;z-index: 2;\" *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                                    \r\n                                    'text-align':item.text_align}\" style=\" height: 100%;line-height: 1;width: 100%;\" *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width,'opacity':item.status ? '1':'0'}\" *ngIf=\"item.type == 'barcode'  \" class=\"barcode\"></canvas>\r\n\r\n                        </div>\r\n\r\n                    </div> \r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div> \r\n    </div>\r\n</nz-layout>\r\n<nz-modal [(nzVisible)]=\"showModalPrintBarcode\" nzTitle=\"{{'Choose a label template' | translate}}\" (nzOnCancel)=\"showModalPrintBarcode = false\" (nzOnOk)=\"gotoPrintBarcode()\">\r\n    <ng-container *nzModalContent>\r\n        <div>{{'Choose the number of label on the row' | translate}}</div>\r\n        <!-- <input type=\"number\" nz-input [(ngModel)]=\"col\" placeholder=\"{{'Enter the number of labels on the row' | translate}}\"> -->\r\n        <nz-select [(ngModel)]=\"col\">\r\n            <nz-option [nzValue]=\"1\" nzLabel=\"1\"></nz-option>\r\n            <nz-option [nzValue]=\"2\" nzLabel=\"2\"></nz-option>\r\n            <nz-option [nzValue]=\"3\" nzLabel=\"3\"></nz-option>\r\n            <nz-option [nzValue]=\"4\" nzLabel=\"4\"></nz-option>\r\n            <nz-option [nzValue]=\"5\" nzLabel=\"5\"></nz-option>\r\n        </nz-select>\r\n        <div>{{'Enter the number of label to print' | translate}}</div>\r\n        <input type=\"number\" nz-input [(ngModel)]=\"number\" placeholder=\"{{'Enter the number of label to print' | translate}}\">\r\n    </ng-container>\r\n</nz-modal>","import { VhComponent } from 'src/app/sales/components/vh-component/vh-component';\r\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { VhAlgorithm, VhQuery, VhQuerySales } from 'ionic-vhframeworks';\r\nimport { combineLatest } from 'rxjs';\r\nimport { LanguageService } from 'src/app/sales/services/language.service';\r\n@Component({\r\n  selector: 'app-print-barcode',\r\n  templateUrl: './print-barcode.component.html',\r\n  styleUrls: ['./print-barcode.component.scss']\r\n})\r\nexport class PrintBarcodeComponent implements OnInit {\r\n  keySearch = ''\r\n  id_design_barcode_selected = 'all'\r\n  list_product: any = this.vhQuerySales.getlocalDetailProducts().filter(e => !e.delete_hidden);\r\n  list_all_product = this.vhQuerySales.getlocalDetailProducts().filter(e => !e.delete_hidden);\r\n  list_search_product: any = this.vhQuerySales.getlocalDetailProducts().filter(e => !e.delete_hidden);\r\n  list_design_barcode: any = [];\r\n  list_search_design_barcode: any = [];\r\n  product_selected: any = {};\r\n  start_print: boolean = false;\r\n  barcode_selected: any = {};\r\n  constructor(\r\n    private router: Router,\r\n    private vhQuerySales: VhQuerySales,\r\n    public vhAlgorithm: VhAlgorithm,\r\n    private languageService: LanguageService,\r\n    public vhComponent: VhComponent,\r\n    private vhQuery: VhQuery,\r\n    private cdRef: ChangeDetectorRef) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getDesignBarcode();\r\n  }\r\n\r\n  /**\r\n   * bắt sk thay đổi đơn vị sp, set lại giá và barcode cho sp\r\n   * @example this.changeUnit(product_selected)\r\n   */\r\n  changeUnit(data){\r\n    data.barcode = data.units.find(e => e.ratio == data.ratio).barcode\r\n    data.price = data.units.find(e => e.ratio == data.ratio).price\r\n  }\r\n  /**\r\n   * get dữ liệu tem sản phẩm đã thiết kế \r\n   * @example this.getDesignBarcode();\r\n   */\r\n  getDesignBarcode() {\r\n    this.vhQuery.getDocsByFields(\"barcode_designs\", { id_branch: { $eq: this.vhQuerySales.getDefaultBranch()._id }, type : {$eq: 1} })\r\n      .then((list_design_barcode: any) => {\r\n        if (list_design_barcode.length) {\r\n          this.list_design_barcode = list_design_barcode;\r\n          // this.id_design_barcode_selected = list_design_barcode[0]._id\r\n          this.barcode_selected = list_design_barcode[0]\r\n          this.list_search_design_barcode = this.list_design_barcode;\r\n          this.list_product = this.vhQuerySales.getlocalDetailProducts().filter(e => !e.delete_hidden).map(item => {\r\n            return {\r\n              ...item,\r\n              ...this.vhQuerySales.getUnit_byRatio(item.units, 1),\r\n              label_size: list_design_barcode.find(i => i._id ==  item.id_design_barcode) ? list_design_barcode.find(i => i._id ==  item.id_design_barcode).width + 'x' + list_design_barcode.find(i => i._id ==  item.id_design_barcode).height : '',\r\n              label_name: list_design_barcode.find(i => i._id ==  item.id_design_barcode) ? list_design_barcode.find(i => i._id ==  item.id_design_barcode).name  : '',\r\n              label_area: list_design_barcode.find(i => i._id ==  item.id_design_barcode) ? list_design_barcode.find(i => i._id ==  item.id_design_barcode).width * list_design_barcode.find(i => i._id ==  item.id_design_barcode).height : 0\r\n            }\r\n          })\r\n          \r\n          \r\n          this.list_all_product =  this.list_product\r\n          this.list_search_product = this.list_product\r\n        }\r\n      })\r\n  }\r\n  goBack() {\r\n    this.router.navigate(['/sales/dashboard/manage/products']);\r\n  }\r\n  heightScroll: string;\r\n  ngAfterViewChecked() {\r\n    if (document.querySelector(\"#product-list\") && document.querySelector(\".ant-table-thead\") && document.querySelector(\".product-list-header\")) {\r\n      this.heightScroll = document.querySelector(\"#product-list\").clientHeight - document.querySelector(\".ant-table-thead\").clientHeight\r\n        - document.querySelector(\".product-list-header\").clientHeight - 100 + \"px\";\r\n    }\r\n    this.cdRef.detectChanges();\r\n  }\r\n  /**\r\n * tìm kiếm sản phẩm theo tên và barcode\r\n * @param value giá trị tìm kiếm từ input\r\n */\r\n  search_Products(value) {\r\n    this.keySearch = value;\r\n    if (value.trim().length > 0) {\r\n      this.list_search_product = this.vhAlgorithm.searchList(\r\n        this.vhAlgorithm.changeAlias(value.toLowerCase()),\r\n        this.list_all_product,\r\n        [\"name\", \"barcode\"]\r\n      );\r\n    } else this.list_search_product = this.list_all_product\r\n    this.searchByStamp(this.id_design_barcode_selected)\r\n  }\r\n\r\n  /**\r\n   * lọc sp theo tem được chọn\r\n   * @example this.searchByStamp('DKHWIDHIWDHUUWIDH')\r\n   */\r\n  searchByStamp(id_design_barcode_selected) {\r\n    this.id_design_barcode_selected = id_design_barcode_selected;\r\n\r\n    this.barcode_selected = this.list_search_design_barcode[this.list_search_design_barcode.findIndex(item => item._id == id_design_barcode_selected)]\r\n    if (id_design_barcode_selected === \"all\") {\r\n      this.list_product = this.list_search_product\r\n    }\r\n    else\r\n    this.list_product = this.list_search_product.filter(item => item.id_design_barcode == id_design_barcode_selected);\r\n  }\r\n\r\n  /**\r\n   * lọc tem theo tên\r\n   * @example this.search('')\r\n   */\r\n  search(value) {\r\n    let tempVal: string = this.vhAlgorithm.changeAlias(value.toLowerCase());\r\n    if (value.length)\r\n      this.list_design_barcode = this.vhAlgorithm.searchList(tempVal, this.list_search_design_barcode, ['name'])\r\n    else this.list_design_barcode = this.list_search_design_barcode\r\n  }\r\n\r\n  /**\r\n   * bắt sk nhấn nút in tem của sp \r\n   * @example this.printProduct(product_selected)\r\n   */\r\n  printProduct(item) {\r\n    this.barcode_selected =  this.list_search_design_barcode.find(i => i._id == item.id_design_barcode)\r\n    this.product_selected = item;\r\n    this.start_print = true;\r\n\r\n    setTimeout(() => {\r\n      this.start_print = false;\r\n    }, 3000);\r\n  }\r\n\r\n\r\n  /**\r\n   * cập nhật trường số lượng tem cần in \r\n   * @example this.updateNumberPrintProduct('DIWUHDIHDIUWHI',10)\r\n   */\r\n  updateNumberPrintProduct(id_product, number_print) {\r\n    this.vhQuerySales.updateProduct(id_product, { number_print: number_print }).then((bool) => {\r\n      if (!bool) this.vhComponent.alertMessageDesktop('error', this.languageService.translate(\"An error while updating product\"))\r\n    }, error => {\r\n      \r\n    })\r\n  }\r\n\r\n  /**\r\n   * cập nhật trường số lượng tem trên hàng\r\n   * @example this.updateNumberPrintProduct('DIWUHDIHDIUWHI',10)\r\n   */\r\n  updateNumberColumnProduct(id_product, number_column) {\r\n    this.vhQuerySales.updateProduct(id_product, { number_column: number_column }).then((bool) => {\r\n      if (!bool) this.vhComponent.alertMessageDesktop('error', this.languageService.translate(\"An error while updating product\"))\r\n    }, error => {\r\n      \r\n    })\r\n  }\r\n\r\n  /**\r\n   * cập nhật trường mẫu tem được gán cho sp\r\n   * @example this.updateNumberPrintProduct('DIWUHDIHDIUWHI',10)\r\n   */\r\n  updateIdBarcode(id_barcode, product){\r\n    this.vhQuerySales.updateProduct(product._id, {id_design_barcode : id_barcode}).then((bool)=>{\r\n      product['label_size'] = this.list_design_barcode.find(i => i._id ==  id_barcode).width + 'x' + this.list_design_barcode.find(i => i._id ==  id_barcode).height\r\n      product['id_design_barcode'] = id_barcode\r\n    }, error=>{\r\n      \r\n      })\r\n  }\r\n\r\n     //** hàm sort cho các cột */\r\n  nameCol = false;                 // chọn sort cột tên sản phẩm\r\n  barcodeCol = false;               // Chọn sắp xếp theo barcode\r\n  number_columnCol = false;\r\n  number_printCol = false;\r\n  label_areaCol = false;\r\n  sortTable(colName){\r\n    switch (colName) {\r\n      case 'name':\r\n        if(this.nameCol){\r\n          this.list_product = this.vhAlgorithm.sortVietnamesebyASC([...this.list_product], colName)\r\n        }else{\r\n          this.list_product = this.vhAlgorithm.sortVietnamesebyDESC([...this.list_product], colName)\r\n        }\r\n        break;\r\n      case 'barcode':\r\n        if(this.barcodeCol){\r\n          this.list_product = this.vhAlgorithm.sortNumberbyASC([...this.list_product], colName)\r\n        }else{\r\n          this.list_product = this.vhAlgorithm.sortNumberbyDESC([...this.list_product], colName)\r\n        }\r\n        break;\r\n      case 'number_column':\r\n        if(this.number_columnCol){\r\n          this.list_product = this.vhAlgorithm.sortNumberbyASC([...this.list_product], colName)\r\n        }else{\r\n          this.list_product = this.vhAlgorithm.sortNumberbyDESC([...this.list_product], colName)\r\n        }\r\n        break;\r\n      case 'number_print':\r\n        if(this.number_printCol){\r\n          this.list_product = this.vhAlgorithm.sortNumberbyASC([...this.list_product], colName)\r\n        }else{\r\n          this.list_product = this.vhAlgorithm.sortNumberbyDESC([...this.list_product], colName)\r\n        }\r\n        break;\r\n      case 'label_area':\r\n        if(this.label_areaCol){\r\n          this.list_product = this.vhAlgorithm.sortNumberbyASC([...this.list_product], 'label_size')\r\n        }else{\r\n          this.list_product = this.vhAlgorithm.sortNumberbyDESC([...this.list_product], 'label_size')\r\n        }\r\n        break;\r\n    }\r\n  }\r\n}\r\n","<div nz-row class=\"row-back medium-size\" (click)=\"goBack()\">\r\n    <i nz-icon nzType=\"left\" nzTheme=\"outline\"></i>{{'Back' | translate}}\r\n</div>\r\n<nz-layout id=\"product-list\" class=\"height-layout\">\r\n    <div nz-row class=\"product-list-header\">\r\n        <div nz-col nzSpan=\"8\" class=\"title left-all-content\">\r\n            <b>{{'Product list printed with labels' | translate}}</b>\r\n        </div>\r\n        <div nz-col nzSpan=\"16\" class=\"right-all-content\">\r\n            <nz-input-group [nzSuffix]=\"suffixIconSearch\">\r\n                <input #box [value]=\"keySearch\" type=\"text\" nz-input\r\n                    placeholder=\"{{'Search for product name, barcode' | translate}}\"\r\n                    (keyup)=\"search_Products(box.value)\" />\r\n            </nz-input-group>\r\n            <ng-template #suffixIconSearch>\r\n                <i nz-icon nzType=\"search\"></i>\r\n            </ng-template>\r\n            <nz-select nzShowSearch [nzServerSearch]=\"true\" (nzOnSearch)=\"search($event)\" nzBorderless\r\n                nzPlaceHolder=\"{{'Choose a label template' | translate}}\" [(ngModel)]=\"id_design_barcode_selected\"\r\n                (ngModelChange)=\"searchByStamp($event)\">\r\n                <nz-option nzLabel=\"{{'All'| translate}}\" nzValue=\"{{'all'}}\"></nz-option>\r\n                <nz-option *ngFor=\"let option of list_design_barcode\" nzLabel=\"{{option.name}}\"\r\n                    nzValue=\"{{option._id}}\"></nz-option>\r\n            </nz-select>\r\n        </div>\r\n\r\n    </div>\r\n    <div style=\"padding-top: 16px;\">\r\n        <nz-table [nzPageSize]=\"20\" [nzPageSizeOptions]=\"[20, 30, 40, 50, 100, 200]\" [nzScroll]=\"{ y: heightScroll }\"\r\n            #allowSale nzShowPagination nzShowSizeChanger\r\n            nzNoResult=\"{{id_design_barcode_selected == '' ? ('Please select the filter' | translate) :('No data'| translate)}}\"\r\n            [nzData]=\"list_product\">\r\n            <thead>\r\n                <tr>\r\n                    <th style=\"cursor: pointer;\" nzWidth=\"24%\" (click)=\"nameCol = !nameCol;sortTable('name')\">\r\n                        <b>{{'Product name' | translate}}</b>\r\n                        <i nz-icon [nzType]=\"nameCol == true ? 'caret-down':'caret-up'\" nzTheme=\"outline\"></i>\r\n                    </th>\r\n                    <th style=\"cursor: pointer;\" nzWidth=\"12%\">\r\n                        <b>{{'Unit' | translate}}</b>\r\n                    </th>\r\n                    <th style=\"cursor: pointer;\" (click)=\"barcodeCol = !barcodeCol;sortTable('barcode')\">\r\n                        <b>{{'Barcode' | translate}}</b>\r\n                        <i nz-icon [nzType]=\"barcodeCol == true ? 'caret-down':'caret-up'\" nzTheme=\"outline\"></i>\r\n                    </th>\r\n                    <th nzWidth=\"18%\">\r\n                        <b>{{'Label name' | translate}}*</b>\r\n                    </th>\r\n                    <th style=\"cursor: pointer;\" (click)=\"label_areaCol = !label_areaCol;sortTable('label_area')\">\r\n                        <b>{{'Size' | translate}}</b>\r\n                        <i nz-icon [nzType]=\"label_areaCol == true ? 'caret-down':'caret-up'\" nzTheme=\"outline\"></i>\r\n                    </th>\r\n                    <th style=\"cursor: pointer;\"\r\n                        (click)=\"number_columnCol = !number_columnCol;sortTable('number_column')\">\r\n                        <b>{{'Number of labels on the row' | translate}}*</b>\r\n                        <i nz-icon [nzType]=\"number_columnCol == true ? 'caret-down':'caret-up'\" nzTheme=\"outline\"></i>\r\n                    </th>\r\n                    <th style=\"cursor: pointer;\" (click)=\"number_printCol = !number_printCol;sortTable('number_print')\">\r\n                        <b>{{'Number of labels to print' | translate}}*</b>\r\n                        <i nz-icon [nzType]=\"number_printCol == true ? 'caret-down':'caret-up'\" nzTheme=\"outline\"></i>\r\n                    </th>\r\n                    <th nzAlign='right'><b>{{'Functions' | translate}}</b></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let data of allowSale.data\">\r\n\r\n                    <td style=\"color: var(--ion-color-vh-green);\">{{ data.name }} <i style=\"cursor: pointer\"\r\n                            (click)=\"vhComponent.copyValue(data.name)\" nz-icon nzType=\"copy\" nzTheme=\"outline\"></i></td>\r\n                    <td>\r\n                        <nz-select *ngIf=\"!data.manysize\" nzShowSearch [(ngModel)]=\"data.ratio\" (ngModelChange)=\"changeUnit(data)\">\r\n                            <nz-option *ngFor=\"let unit of data.units\" [nzLabel]=\"unit.unit\" [nzValue]=\"unit.ratio\">\r\n                            </nz-option>\r\n                        </nz-select>\r\n                    </td>\r\n                    <td>{{ data.barcode }} </td>\r\n                    <td>\r\n                        <nz-select [ngModel]=\"data.id_design_barcode\"\r\n                            (ngModelChange)=\"data.id_design_barcode = $event;updateIdBarcode($event, data)\">\r\n                            <nz-option *ngFor=\"let item of list_design_barcode\" [nzValue]=\"item._id\"\r\n                                [nzLabel]=\"item.name\"></nz-option>\r\n                        </nz-select>\r\n                    </td>\r\n                    <td>{{ data.label_size }}</td>\r\n                    <td nzAlign=\"center\">\r\n                        <nz-select [(ngModel)]=\"data.number_column\"\r\n                            (ngModelChange)=\"updateNumberColumnProduct(data._id,data.number_column)\">\r\n                            <nz-option [nzValue]=\"1\" nzLabel=\"1\"></nz-option>\r\n                            <nz-option [nzValue]=\"2\" nzLabel=\"2\"></nz-option>\r\n                            <nz-option [nzValue]=\"3\" nzLabel=\"3\"></nz-option>\r\n                            <nz-option [nzValue]=\"4\" nzLabel=\"4\"></nz-option>\r\n                            <nz-option [nzValue]=\"5\" nzLabel=\"5\"></nz-option>\r\n                        </nz-select>\r\n                    </td>\r\n                    <td>\r\n                        <nz-input-number type=\"number\" [nzMin]=\"1\" [nzMax]=\"200\" nz-input placeholder=\"Basic usage\"\r\n                            [(ngModel)]=\"data.number_print\"\r\n                            (ngModelChange)=\"updateNumberPrintProduct(data._id,data.number_print)\">\r\n                        </nz-input-number>\r\n                    </td>\r\n                    <td nzAlign=\"right\">\r\n                        <button [disabled]=\"!data.number_print || !data.number_column || !data.id_design_barcode\"\r\n                            class=\"btn-add\" nz-button nzType=\"default\" (click)=\"printProduct(data)\">\r\n                            <i nz-icon nzType=\"printer\" nzTheme=\"outline\"></i>\r\n                            {{'Print'|translate}} barcode\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n    </div>\r\n</nz-layout>\r\n<ng-container [ngSwitch]=\"product_selected.number_column\">\r\n    <app-print-one-col style=\"display: none;\" *ngSwitchCase=\" 1\" [start_print]=\"start_print\"\r\n        [stamp]=\"{formProduct : product_selected, barcode:barcode_selected, col: product_selected.number_column, number:  product_selected.number_print}\">\r\n    </app-print-one-col>\r\n    <app-print-two-col style=\"display: none;\" *ngSwitchCase=\" 2\" [start_print]=\"start_print\"\r\n        [stamp]=\"{formProduct : product_selected, barcode:barcode_selected, col: product_selected.number_column, number:  product_selected.number_print}\">\r\n    </app-print-two-col>\r\n    <app-print-three-col style=\"display: none;\" *ngSwitchCase=\" 3\" [start_print]=\"start_print\"\r\n        [stamp]=\"{formProduct : product_selected, barcode:barcode_selected, col: product_selected.number_column, number:  product_selected.number_print}\">\r\n    </app-print-three-col>\r\n    <app-print-four-col style=\"display: none;\" *ngSwitchCase=\" 4\" [start_print]=\"start_print\"\r\n        [stamp]=\"{formProduct : product_selected, barcode:barcode_selected, col: product_selected.number_column, number:  product_selected.number_print}\">\r\n    </app-print-four-col>\r\n    <app-print-five-col style=\"display: none;\" *ngSwitchCase=\" 5\" [start_print]=\"start_print\"\r\n        [stamp]=\"{formProduct : product_selected, barcode:barcode_selected, col: product_selected.number_column, number:  product_selected.number_print}\">\r\n    </app-print-five-col>\r\n</ng-container>","import { DetailComponent } from './detail/detail.component';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PrintBarcodeComponent } from './print-barcode.component';\r\nimport { NgZorroAntModule } from 'src/app/ng-zorro-ant.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { PrintTwoColComponent } from './print-two-col/print-two-col.component';\r\nimport { PrintThreeColComponent } from './print-three-col/print-three-col.component';\r\nimport { PrintOneColComponent } from './print-one-col/print-one-col.component';\r\nimport { PrintFourColComponent } from './print-four-col/print-four-col.component';\r\nimport { PrintFiveColComponent } from './print-five-col/print-five-col.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PrintBarcodeComponent\r\n  },\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PrintBarcodeComponent,\r\n    DetailComponent,\r\n    PrintTwoColComponent,\r\n    PrintThreeColComponent,\r\n    PrintOneColComponent,\r\n    PrintFourColComponent,\r\n    PrintFiveColComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    NgZorroAntModule,\r\n    ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'}),\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n  ]\r\n})\r\nexport class PrintBarcodeModule { }\r\n","import { VhComponent } from 'src/app/sales/components/vh-component/vh-component';\r\nimport { VhAlgorithm, VhQuery } from 'ionic-vhframeworks';\r\nimport { Component, OnInit, ChangeDetectorRef, Input, SimpleChanges } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport jsbarcode from 'jsbarcode';\r\nimport printJS from 'print-js';\r\nimport { Platform } from '@ionic/angular';\r\ndeclare var electron: any;\r\n@Component({\r\n  selector: 'app-print-five-col',\r\n  templateUrl: './print-five-col.component.html',\r\n  styleUrls: ['./print-five-col.component.scss']\r\n})\r\nexport class PrintFiveColComponent implements OnInit {\r\n  propertySelected: any;\r\n  @Input() start_print : boolean = false\r\n  @Input() stamp: any;\r\n  listRowBarcode = [{show_col2:false,show_col3:false,show_col4:false,show_col5:false}]; // chứa số hàng hiển thị. true thì hiển thị 2 tem. false là hien thị 1 tem trên 1 hàng\r\n  heightScroll :any;\r\n  constructor(\r\n    private router: Router,\r\n    public vhAlgorithm: VhAlgorithm,\r\n    private cdf: ChangeDetectorRef,\r\n    private vhComponent:VhComponent,\r\n    private vhQuery:VhQuery,\r\n    public platform: Platform\r\n  ) {\r\n    // this.stamp = this.router.getCurrentNavigation().extras.state;\r\n    // this.stamp.barcode.property =  this.vhAlgorithm.sortNumberbyASC(this.stamp.barcode.property,'y')\r\n  }\r\n\r\n  ngOnChanges({start_print}: SimpleChanges): void {\r\n    if(start_print && start_print.currentValue) {\r\n      this.vhComponent.showLoading('')\r\n      .then(() =>{\r\n       this.stamp.barcode.property =  this.vhAlgorithm.sortNumberbyASC(this.stamp.barcode.property,'y')\r\n       for(let item of this.stamp.barcode.property){\r\n        switch(item.type){\r\n          case 'barcode-text': item.value = this.stamp.formProduct.barcode;break;\r\n          case 'price': item.value = this.stamp.formProduct.price;break;\r\n          case 'barcode': item.value = this.stamp.formProduct.barcode;break;\r\n          case 'name': item.value = this.stamp.formProduct.name;break;\r\n        }\r\n      }\r\n       this.propertySelected = this.stamp.barcode.property[0];\r\n       this.changeNummber();\r\n       setTimeout(() => {\r\n        this.renderBarcode(); \r\n      }, 1000);\r\n       setTimeout(() => {\r\n         this.vhComponent.hideLoading(0)\r\n         this.printBrowser();\r\n       }, 3000);\r\n      })\r\n     \r\n    }\r\n   }\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  changeNummber() {\r\n    /**\r\n     * nếu chia hết cho 5 thì hiện cả 5 tem trên hàng\r\n     * ngược lại => khi push tới hàng cuối cùng thì check i = (number-1)/5 : cột thứ 1  hay = (number-2)/5 : cột thứ 2 hay = (number-3)/5 : cột thứ 3 hay = (number-4)/5 : cột thứ 4\r\n     * \r\n     */\r\n    this.listRowBarcode = []\r\n    for (let i = 0; i < this.stamp.number/5; i++) {\r\n     if(this.stamp.number%5 ==0)  this.listRowBarcode.push({show_col2:true,show_col3:true,show_col4:true,show_col5:true});\r\n     else {\r\n       if(i == (this.stamp.number-1)/5) this.listRowBarcode.push({show_col2:false,show_col3:false,show_col4:false,show_col5:false});\r\n       else if(i == (this.stamp.number-2)/5) this.listRowBarcode.push({show_col2:true,show_col3:false,show_col4:false,show_col5:false});\r\n       else  if(i == (this.stamp.number-3)/5) this.listRowBarcode.push({show_col2:true,show_col3:true,show_col4:false,show_col5:false});\r\n       else  if(i == (this.stamp.number-4)/5) this.listRowBarcode.push({show_col2:true,show_col3:true,show_col4:true,show_col5:false});\r\n       else this.listRowBarcode.push({show_col2:true,show_col3:true,show_col4:true,show_col5:true});\r\n     }\r\n    }\r\n    \r\n  }\r\n\r\n  renderBarcode() {\r\n    if(this.stamp.formProduct.barcode)\r\n    jsbarcode(\".barcode\",  this.stamp.formProduct.barcode, {\r\n      displayValue: false,\r\n      // height: 65\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/sales/dashboard/manage/design-barcode/detail'],{state: this.stamp.barcode})\r\n  }\r\n  Print() {\r\n    if (this.platform.is(\"electron\")) this.printElectron()\r\n    else this.printBrowser()\r\n  }\r\n  printElectron() {\r\n    let html = document.getElementById(\"stamp-barcode-electron\").innerHTML;\r\n    electron.ipcRenderer.send(\"print-start\", {\r\n      html: html,\r\n      deviceName: this.stamp.printer_name,\r\n    });\r\n    electron.ipcRenderer.on(\"print-done\", (event, data) => {\r\n      if (!data) this.vhComponent.alertMessageDesktop('warning', 'Printing failed', 3000)\r\n     \r\n    });\r\n  }\r\n\r\n  printBrowser() {\r\n    printJS({\r\n      printable: \"stamp-barcode\",\r\n      type: \"html\",\r\n      scanStyles: false,\r\n      maxWidth: this.stamp.width,\r\n      style:\r\n        '@page { margin: 0 !important;padding: 0 !important;}' +\r\n        '.stamp {margin-bottom: 3mm; width: ' + this.stamp.width + 'mm;height: ' + (this.stamp.height - 4) + 'mm;}' +\r\n        '.center-all-content { display: flex;align-items: center;justify-content: center;}'\r\n    });\r\n  }\r\n}\r\n","\r\n<nz-layout>\r\n    <div nz-row style=\"height: 100%;padding-top: 16px;\" id=\"scroll\">\r\n        <div nz-col nzSpan=\"24\" class=\" center-all-content hideScrollbar\" style=\"overflow: auto;padding-top: 16px;\"\r\n            [ngStyle]=\"{'height.px': heightScroll}\">\r\n            <div id=\"stamp-barcode\" style=\"height: 100%; margin-top: -1.5mm\">\r\n                <div [ngStyle]=\"{'width.mm': stamp.barcode.width*5,'height.mm': stamp.barcode.height -3 ,'margin-bottom':i == listRowBarcode.length -1 ? '0' : ''}\" class=\"stamp mb-6\"\r\n                    style=\"display: flex;margin-left: -1mm;\" *ngFor=\"let item of listRowBarcode, index as i\">\r\n                    <div \r\n                    style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n                    </div>\r\n                    <div  \r\n                        *ngIf=\"item.show_col2\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;overflow: hidden;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col3\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center; \"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col4\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center; \"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col5\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center; \"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div id=\"stamp-barcode-electron\" style=\"margin-top: -1.5mm\">\r\n                <div [ngStyle]=\"{'width.mm': stamp.barcode.width*5,'height.mm': stamp.barcode.height -3 ,'margin-bottom':i == listRowBarcode.length -1 ? '0' : ''}\" class=\"stamp mb-6\"\r\n                    style=\"display: flex;margin-left: -1mm;\" *ngFor=\"let item of listRowBarcode, index as i\">\r\n                    <div \r\n                    style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;overflow: hidden;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n                    </div>\r\n                    <div  \r\n                        *ngIf=\"item.show_col2\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;overflow: hidden;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col3\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\"position: absolute;align-items: center; overflow: hidden;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col4\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;overflow: hidden; \"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col5\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;overflow: hidden; \"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</nz-layout>","import { VhComponent } from 'src/app/sales/components/vh-component/vh-component';\r\nimport { VhAlgorithm, VhQuery } from 'ionic-vhframeworks';\r\nimport { Component, OnInit, ChangeDetectorRef, Input, SimpleChanges } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport jsbarcode from 'jsbarcode';\r\nimport printJS from 'print-js';\r\nimport { Platform } from '@ionic/angular';\r\ndeclare var electron: any;\r\n\r\n@Component({\r\n  selector: 'app-print-four-col',\r\n  templateUrl: './print-four-col.component.html',\r\n  styleUrls: ['./print-four-col.component.scss']\r\n})\r\nexport class PrintFourColComponent implements OnInit {\r\n  propertySelected: any;\r\n  @Input() start_print : boolean = false\r\n  @Input() stamp: any;\r\n  listRowBarcode = [{show_col2:false,show_col3:false,show_col4:false}]; // chứa số hàng hiển thị. true thì hiển thị 2 tem. false là hien thị 1 tem trên 1 hàng\r\n  heightScroll :any;\r\n  constructor(\r\n    private router: Router,\r\n    public vhAlgorithm: VhAlgorithm,\r\n    private cdf: ChangeDetectorRef,\r\n    private vhComponent:VhComponent,\r\n    private vhQuery:VhQuery,\r\n    public platform: Platform\r\n  ) {\r\n    // this.stamp = this.router.getCurrentNavigation().extras.state;\r\n    // this.stamp.barcode.property =  this.vhAlgorithm.sortNumberbyASC(this.stamp.barcode.property,'y')\r\n  }\r\n\r\n  ngOnChanges({start_print}: SimpleChanges): void {\r\n    if(start_print && start_print.currentValue) {\r\n      this.vhComponent.showLoading('')\r\n      .then(() =>{\r\n       this.stamp.barcode.property =  this.vhAlgorithm.sortNumberbyASC(this.stamp.barcode.property,'y')\r\n       for(let item of this.stamp.barcode.property){\r\n        switch(item.type){\r\n          case 'barcode-text': item.value = this.stamp.formProduct.barcode;break;\r\n          case 'price': item.value = this.stamp.formProduct.price;break;\r\n          case 'barcode': item.value = this.stamp.formProduct.barcode;break;\r\n          case 'name': item.value = this.stamp.formProduct.name;break;\r\n        }\r\n      }\r\n       this.propertySelected = this.stamp.barcode.property[0];\r\n       this.changeNummber()\r\n       setTimeout(() => {\r\n        this.renderBarcode(); \r\n      }, 1000);\r\n       setTimeout(() => {\r\n         this.vhComponent.hideLoading(0)\r\n         this.printBrowser();\r\n       }, 3000);\r\n      })\r\n     \r\n    }\r\n   }\r\n\r\n  ngOnInit(): void {\r\n     \r\n  }\r\n\r\n  changeNummber() {\r\n    /**\r\n     * nếu chia hết cho 4 thì hiện cả 4 tem trên hàng\r\n     * ngược lại  => khi push tới hàng cuối cùng thì check i = (number-1)/3 : cột thứ 1  hay = (number-2)/3 : cột thứ 2\r\n     * \r\n     */\r\n    this.listRowBarcode = []\r\n    for (let i = 0; i < this.stamp.number/4; i++) {\r\n      \r\n      \r\n     if(this.stamp.number%4 ==0)  this.listRowBarcode.push({show_col2:true,show_col3:true,show_col4:true});\r\n     else {\r\n       if(i == (this.stamp.number-1)/4) this.listRowBarcode.push({show_col2:false,show_col3:false,show_col4:false});\r\n       else if(i == (this.stamp.number-2)/4) this.listRowBarcode.push({show_col2:true,show_col3:false,show_col4:false});\r\n       else  if(i == (this.stamp.number-3)/4) this.listRowBarcode.push({show_col2:true,show_col3:true,show_col4:false});\r\n       else this.listRowBarcode.push({show_col2:true,show_col3:true,show_col4:true});\r\n     }\r\n    }\r\n    \r\n  }\r\n \r\n\r\n  renderBarcode() {\r\n    if(this.stamp.formProduct.barcode)\r\n    jsbarcode(\".barcode\",  this.stamp.formProduct.barcode, {\r\n      displayValue: false,\r\n      // height: 65\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/sales/dashboard/manage/design-barcode/detail'],{state: this.stamp.barcode})\r\n  }\r\n  Print() {\r\n    if (this.platform.is(\"electron\")) this.printElectron()\r\n    else this.printBrowser()\r\n  }\r\n  printElectron() {\r\n    let html = document.getElementById(\"stamp-barcode-electron\").innerHTML;\r\n    electron.ipcRenderer.send(\"print-start\", {\r\n      html: html,\r\n      deviceName: this.stamp.printer_name,\r\n      \r\n    });\r\n    electron.ipcRenderer.on(\"print-done\", (event, data) => {\r\n      if (!data) this.vhComponent.alertMessageDesktop('warning', 'Printing failed', 3000)\r\n     \r\n    });\r\n  }\r\n\r\n  printBrowser() {\r\n    printJS({\r\n      printable: \"stamp-barcode\",\r\n      type: \"html\",\r\n      scanStyles: false,\r\n      maxWidth: this.stamp.width,\r\n      style:\r\n        '@page { margin: 0 !important;padding: 0 !important;}' +\r\n        '.stamp {margin-bottom: 3mm; width: ' + this.stamp.width + 'mm;height: ' + (this.stamp.height > 20 ? this.stamp.height - 4 : this.stamp.height -2 ) + 'mm;}' +\r\n        '.center-all-content { display: flex;align-items: center;justify-content: center;}'\r\n    });\r\n  }\r\n\r\n}\r\n","\r\n<nz-layout>\r\n    \r\n    <div nz-row style=\"height: 100%;padding-top: 16px;\" id=\"scroll\">\r\n        <div nz-col nzSpan=\"24\" class=\" center-all-content hideScrollbar\" style=\"overflow: auto;padding-top: 16px;\"\r\n            [ngStyle]=\"{'height.px': heightScroll}\">\r\n            <div id=\"stamp-barcode\" style=\"height: 100%; margin-top: -1.5mm\">\r\n                <div [ngStyle]=\"{'width.mm': stamp.barcode.width*4,'height.mm': stamp.barcode.height > 20 ?  stamp.barcode.height -3 :  stamp.barcode.height -2 ,'margin-bottom':i == listRowBarcode.length -1 ? '0' : ''}\" class=\"stamp mb-6\"\r\n                    style=\"display: flex;margin-left: -1mm;\" *ngFor=\"let item of listRowBarcode, index as i\">\r\n                    <div \r\n                        style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n                    </div>\r\n                    <div  \r\n                        *ngIf=\"item.show_col2\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;overflow: hidden;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col3\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center; \"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col4\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center; \"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div> \r\n                </div>\r\n\r\n            </div>\r\n            <div id=\"stamp-barcode-electron\" style=\"margin-top: -1.5mm\">\r\n                <div [ngStyle]=\"{'width.mm': stamp.barcode.width*4,'height.mm': stamp.barcode.height > 20 ?  stamp.barcode.height -3 :  stamp.barcode.height -2 ,'margin-bottom':i == listRowBarcode.length -1 ? '0' : ''}\" class=\"stamp mb-6\"\r\n                    style=\"display: flex;margin-left: -1mm;\" *ngFor=\"let item of listRowBarcode, index as i\">\r\n                    <div \r\n                        style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;overflow: hidden;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n                    </div>\r\n                    <div  \r\n                        *ngIf=\"item.show_col2\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;overflow: hidden;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col3\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\"position: absolute;align-items: center;overflow: hidden; \"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col4\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center; overflow: hidden;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div> \r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</nz-layout>","import { VhComponent } from 'src/app/sales/components/vh-component/vh-component';\r\nimport { VhAlgorithm, VhQuery } from 'ionic-vhframeworks';\r\nimport { Component, OnInit, ChangeDetectorRef, Input, SimpleChanges } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport jsbarcode from 'jsbarcode';\r\nimport printJS from 'print-js';\r\n\r\nimport { Platform } from '@ionic/angular';\r\ndeclare var electron: any;\r\n@Component({\r\n  selector: 'app-print-one-col',\r\n  templateUrl: './print-one-col.component.html',\r\n  styleUrls: ['./print-one-col.component.scss']\r\n})\r\nexport class PrintOneColComponent implements OnInit {\r\n\r\n  @Input() start_print : boolean = false\r\n  @Input() stamp: any;\r\n  listOfFontSize = [8, 9, 10, 11, 12, 13, 14, 15, 16];\r\n  number = 1;\r\n  listRowBarcode = [false]; // chứa số hàng hiển thị. true thì hiển thị 2 tem. false là hien thị 1 tem trên 1 hàng\r\n  heightScroll :any;\r\n  propertySelected: any;\r\n  constructor(\r\n    private router: Router,\r\n    public vhAlgorithm: VhAlgorithm,\r\n    private cdf: ChangeDetectorRef,\r\n    private vhComponent:VhComponent,\r\n    private vhQuery:VhQuery,\r\n    public platform: Platform\r\n  ) {\r\n    // this.stamp = this.router.getCurrentNavigation().extras.state;\r\n    // this.stamp.barcode.property =  this.vhAlgorithm.sortNumberbyASC(this.stamp.barcode.property,'y')\r\n  }\r\n\r\n  ngOnChanges({start_print}: SimpleChanges): void {\r\n    if(start_print && start_print.currentValue) {\r\n      this.vhComponent.showLoading('')\r\n      .then(() =>{\r\n       this.stamp.barcode.property =  this.vhAlgorithm.sortNumberbyASC(this.stamp.barcode.property,'y')\r\n       for(let item of this.stamp.barcode.property){\r\n        switch(item.type){\r\n          case 'barcode-text': item.value = this.stamp.formProduct.barcode;break;\r\n          case 'price': item.value = this.stamp.formProduct.price;break;\r\n          case 'barcode': item.value = this.stamp.formProduct.barcode;break;\r\n          case 'name': item.value = this.stamp.formProduct.name;break;\r\n        }\r\n      }\r\n       this.propertySelected = this.stamp.barcode.property[0];\r\n       this.changeNummber()\r\n       setTimeout(() => {\r\n        this.renderBarcode(); \r\n      }, 1000);\r\n       setTimeout(() => {\r\n         this.vhComponent.hideLoading(0)\r\n         this.printBrowser();\r\n       }, 3000);\r\n      })\r\n     \r\n    }\r\n   }\r\n\r\n  ngOnInit(): void { \r\n  }\r\n\r\n  changeNummber() {\r\n    this.listRowBarcode = []\r\n    for (let i = 0; i < this.stamp.number ; i++) {\r\n      this.listRowBarcode.push(true);\r\n    }\r\n  } \r\n \r\n  renderBarcode() {\r\n    if(this.stamp.formProduct.barcode)\r\n    jsbarcode(\".barcode\",  this.stamp.formProduct.barcode, {\r\n      displayValue: false,\r\n      // height: 65\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/sales/dashboard/manage/design-barcode/detail'],{state: this.stamp.barcode})\r\n  } \r\n  Print() {\r\n    if (this.platform.is(\"electron\")) this.printElectron()\r\n    else this.printBrowser()\r\n  }\r\n  printElectron() {\r\n    let html = document.getElementById(\"stamp-barcode-electron\").innerHTML;\r\n    electron.ipcRenderer.send(\"print-start\", {\r\n      html: html,\r\n      deviceName: this.stamp.printer_name,\r\n      \r\n    });\r\n    electron.ipcRenderer.on(\"print-done\", (event, data) => {\r\n      if (!data) this.vhComponent.alertMessageDesktop('warning', 'Printing failed', 3000)\r\n     \r\n    });\r\n  }\r\n  printBrowser() {\r\n    printJS({\r\n      printable: \"stamp-barcode\",\r\n      type: \"html\",\r\n      scanStyles: false,\r\n      maxWidth: this.stamp.width,\r\n      style:\r\n        '@page { margin: 0 !important;padding: 0 !important;}' +\r\n        '.stamp {margin-bottom: 3mm; width: ' + this.stamp.width + 'mm;height: ' + (this.stamp.height - 4) + 'mm;}' +\r\n        '.center-all-content { display: flex;align-items: center;justify-content: center;}'\r\n    });\r\n  }\r\n\r\n}\r\n","\r\n<nz-layout>\r\n\r\n    <div nz-row style=\"height: 100%;padding-top: 16px;\" id=\"scroll\">\r\n        <div nz-col nzSpan=\"24\" class=\" center-all-content hideScrollbar\" style=\"overflow: auto;padding-top: 16px;\"\r\n            [ngStyle]=\"{'height.px': heightScroll}\">\r\n            <div id=\"stamp-barcode\" style=\"height: 100%;margin-top: -1.5mm;\">\r\n                <div [ngStyle]=\"{'width.mm': stamp.barcode.width*stamp.col,'height.mm': stamp.barcode.height -3,'margin-bottom':i == listRowBarcode.length -1 ? '0' : ''}\" class=\"stamp mb-6\"\r\n                    style=\"display: flex;margin-left: -1mm;\" *ngFor=\"let item of listRowBarcode, index as i\">\r\n                    <div [ngStyle]=\"{'width.mm': stamp.barcode.width,'height.mm': stamp.barcode.height -3}\"  style=\"position: relative;\" class=\"border-top\"\r\n                        >\r\n                        <div  \r\n                            *ngFor=\"let pro of stamp.barcode.property, index as idx\"  \r\n                            style=\" position: absolute;align-items: center;overflow: hidden;\"  \r\n                            [ngStyle]=\"{\r\n                            'text-align': pro.text_align,\r\n                            'font-size.px': pro.font_size, \r\n                            'font-weight': pro.font_weight  , \r\n                            'text-decoration': pro.text_decoration ,\r\n                            'font-style': pro.font_style  ,\r\n                            'top.px': pro.type == 'price' && i == listRowBarcode.length -1 ? pro.y -2 : pro.y,\r\n                            'left.px':pro.x,\r\n                            'height.mm': pro.height ,\r\n                            'width.mm': pro.width,\r\n                            'justify-content':pro.type == 'barcode' ? pro.justify_content : '',\r\n                            'z-index':pro.z_index,\r\n                            'display': pro.status ? 'flex' : 'none'\r\n                            }\"\r\n                            [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\"\r\n                            >\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                'text-align':pro.text_align,\r\n                                'height.mm': pro.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"pro.type != 'barcode' && pro.type != 'price' && pro.status\">{{pro.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                    'text-align':pro.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  pro.type == 'price' && pro.status\">{{vhAlgorithm.vhcurrencyunit_symbol(pro.value)}}</span>\r\n                            <canvas [ngStyle]=\"{'height.mm': pro.height,'width.mm': pro.width}\"\r\n                                *ngIf=\"pro.type == 'barcode' && pro.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div id=\"stamp-barcode-electron\" style=\"margin-top: -1.5mm;\">\r\n                <div [ngStyle]=\"{'width.mm': stamp.barcode.width*stamp.col,'height.mm': stamp.barcode.height -3,'margin-bottom':i == listRowBarcode.length -1 ? '0' : ''}\" class=\"stamp mb-6\"\r\n                    style=\"display: flex;margin-left: -1mm;\" *ngFor=\"let item of listRowBarcode, index as i\">\r\n                    <div [ngStyle]=\"{'width.mm': stamp.barcode.width,'height.mm': stamp.barcode.height -3}\"  style=\"position: relative;\" class=\"border-top\"\r\n                        >\r\n                        <div  \r\n                            *ngFor=\"let pro of stamp.barcode.property, index as idx\"  \r\n                            style=\" position: absolute;align-items: center;overflow: hidden;\"  \r\n                            [ngStyle]=\"{\r\n                            'text-align': pro.text_align,\r\n                            'font-size.px': pro.font_size, \r\n                            'font-weight': pro.font_weight  , \r\n                            'text-decoration': pro.text_decoration ,\r\n                            'font-style': pro.font_style  ,\r\n                            'top.px': pro.type == 'price' && i == listRowBarcode.length -1 ? pro.y -2 : pro.y,\r\n                            'left.px':pro.x,\r\n                            'height.mm': pro.height ,\r\n                            'width.mm': pro.width,\r\n                            'justify-content':pro.type == 'barcode' ? pro.justify_content : '',\r\n                            'z-index':pro.z_index,\r\n                            'display': pro.status ? 'flex' : 'none'\r\n                            }\"\r\n                            [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\"\r\n                            >\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                'text-align':pro.text_align,\r\n                                'height.mm': pro.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"pro.type != 'barcode' && pro.type != 'price' && pro.status\">{{pro.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                    'text-align':pro.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  pro.type == 'price' && pro.status\">{{vhAlgorithm.vhcurrencyunit_symbol(pro.value)}}</span>\r\n                            <svg [ngStyle]=\"{'height.mm': pro.height,'width.mm': pro.width}\"\r\n                                *ngIf=\"pro.type == 'barcode' && pro.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</nz-layout>","import { VhComponent } from 'src/app/sales/components/vh-component/vh-component';\r\nimport { VhAlgorithm, VhQuery } from 'ionic-vhframeworks';\r\nimport { Component, OnInit, ChangeDetectorRef, Input, SimpleChanges } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport jsbarcode from 'jsbarcode';\r\nimport printJS from 'print-js';\r\nimport { Platform } from '@ionic/angular';\r\ndeclare var electron: any;\r\n\r\n@Component({\r\n  selector: 'app-print-three-col',\r\n  templateUrl: './print-three-col.component.html',\r\n  styleUrls: ['./print-three-col.component.scss']\r\n})\r\nexport class PrintThreeColComponent implements OnInit {\r\n  propertySelected: any;\r\n  @Input() start_print : boolean = false\r\n  @Input() stamp: any;\r\n  listRowBarcode = [{show_col2:false,show_col3:false}]; // chứa số hàng hiển thị. true thì hiển thị 2 tem. false là hien thị 1 tem trên 1 hàng\r\n  heightScroll :any;\r\n  constructor(\r\n    private router: Router,\r\n    public vhAlgorithm: VhAlgorithm,\r\n    private cdf: ChangeDetectorRef,\r\n    private vhComponent:VhComponent,\r\n    private vhQuery:VhQuery,\r\n    public platform: Platform\r\n  ) {\r\n    // this.stamp = this.router.getCurrentNavigation().extras.state;\r\n    // this.stamp.barcode.property =  this.vhAlgorithm.sortNumberbyASC(this.stamp.barcode.property,'y')\r\n  }\r\n\r\n  ngOnChanges({start_print}: SimpleChanges): void {\r\n    if(start_print && start_print.currentValue) {\r\n      this.vhComponent.showLoading('')\r\n      .then(() =>{\r\n       this.stamp.barcode.property =  this.vhAlgorithm.sortNumberbyASC(this.stamp.barcode.property,'y')\r\n       for(let item of this.stamp.barcode.property){\r\n        switch(item.type){\r\n          case 'barcode-text': item.value = this.stamp.formProduct.barcode;break;\r\n          case 'price': item.value = this.stamp.formProduct.price;break;\r\n          case 'barcode': item.value = this.stamp.formProduct.barcode;break;\r\n          case 'name': item.value = this.stamp.formProduct.name;break;\r\n        }\r\n      }\r\n       this.propertySelected = this.stamp.barcode.property[0];\r\n       this.changeNummber()\r\n       setTimeout(() => {\r\n        this.renderBarcode(); \r\n      }, 1000);\r\n       setTimeout(() => {\r\n         this.vhComponent.hideLoading(0)\r\n         this.printBrowser();\r\n       }, 3000);\r\n      })\r\n     \r\n    }\r\n   }\r\n\r\n  ngOnInit(): void {\r\n     \r\n  }\r\n\r\n  changeNummber() {\r\n    /**\r\n     * nếu chia hết cho 3 thì hiện cả 3 tem trên hàng\r\n     * ngược lại number = 4 => khi push tới hàng cuối cùng thì check i = (number-1)/3 : cột thứ 1  hay = (number-2)/3 : cột thứ 2\r\n     * \r\n     */\r\n    this.listRowBarcode = []\r\n    for (let i = 0; i < this.stamp.number/3; i++) {\r\n     if(this.stamp.number%3 ==0)  this.listRowBarcode.push({show_col2:true,show_col3:true});\r\n     else {\r\n       if(i == (this.stamp.number-1)/3) this.listRowBarcode.push({show_col2:false,show_col3:false});\r\n       else if(i == (this.stamp.number-2)/3) this.listRowBarcode.push({show_col2:true,show_col3:false});\r\n       else this.listRowBarcode.push({show_col2:true,show_col3:true});\r\n     }\r\n    }\r\n    \r\n  } \r\n  renderBarcode() {\r\n    if(this.stamp.formProduct.barcode)\r\n    jsbarcode(\".barcode\",  this.stamp.formProduct.barcode, {\r\n      displayValue: false,\r\n      // height: 65\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/sales/dashboard/manage/design-barcode/detail'],{state: this.stamp.barcode})\r\n  }\r\n  Print() {\r\n    if (this.platform.is(\"electron\")) this.printElectron()\r\n    else this.printBrowser()\r\n  }\r\n  printElectron() {\r\n    let html = document.getElementById(\"stamp-barcode-electron\").innerHTML;\r\n    electron.ipcRenderer.send(\"print-start\", {\r\n      html: html,\r\n      deviceName: this.stamp.printer_name,\r\n      \r\n    });\r\n    electron.ipcRenderer.on(\"print-done\", (event, data) => {\r\n      if (!data) this.vhComponent.alertMessageDesktop('warning', 'Printing failed', 3000)\r\n     \r\n    });\r\n  }\r\n\r\n  printBrowser() {\r\n    printJS({\r\n      printable: \"stamp-barcode\",\r\n      type: \"html\",\r\n      scanStyles: false,\r\n      maxWidth: this.stamp.width,\r\n      style:\r\n        '@page { margin: 0 !important;padding: 0 !important;}' +\r\n        '.stamp {margin-bottom: 3mm; width: ' + this.stamp.width + 'mm;height: ' + (this.stamp.height - 4) + 'mm;}'  \r\n    });\r\n  }\r\n}\r\n","\r\n<nz-layout>\r\n    \r\n    <div nz-row style=\"height: 100%;padding-top: 16px;\" id=\"scroll\">\r\n        <div nz-col nzSpan=\"24\" class=\"hideScrollbar\" style=\"overflow: auto;padding-top: 16px;display: flex;align-items: flex-start;justify-content: center;\"\r\n            [ngStyle]=\"{'height.px': heightScroll}\">\r\n            <div id=\"stamp-barcode\" style=\"margin-top: -1.5mm\">\r\n                <div [ngStyle]=\"{'width.mm': stamp.barcode.width*3,'height.mm': stamp.barcode.height -3 ,'margin-bottom':i == listRowBarcode.length -1 ? '0' : ''}\"  \r\n                    style=\"display: flex;\" *ngFor=\"let item of listRowBarcode, index as i\" [ngClass]=\"{'stamp': i != listRowBarcode.length -1,'mb-6': i != listRowBarcode.length -1}\">\r\n                    <div \r\n                    style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n                    </div>\r\n                    <div  \r\n                        *ngIf=\"item.show_col2\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;overflow: hidden;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col3\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center; \"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <canvas [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div id=\"stamp-barcode-electron\" style=\"margin-top: -1.5mm\">\r\n                <div [ngStyle]=\"{'width.mm': stamp.barcode.width*3,'height.mm': stamp.barcode.height -3 ,'margin-bottom':i == listRowBarcode.length -1 ? '0' : ''}\"  \r\n                    style=\"display: flex;\" *ngFor=\"let item of listRowBarcode, index as i\" [ngClass]=\"{'stamp': i != listRowBarcode.length -1,'mb-6': i != listRowBarcode.length -1}\">\r\n                    <div \r\n                    style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;overflow: hidden;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n                    </div>\r\n                    <div  \r\n                        *ngIf=\"item.show_col2\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;overflow: hidden;\"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div \r\n                        *ngIf=\"item.show_col3\" style=\"position: relative;height: 100%;\" [ngStyle]=\"{'width.mm': stamp.barcode.width}\" class=\"border-top\">\r\n                        <div *ngFor=\"let item of stamp.barcode.property, index as idx\" style=\" position: absolute;align-items: center;overflow: hidden; \"\r\n                            [ngStyle]=\"{\r\n                            'font-size.px': item.font_size, \r\n                            'font-weight': item.font_weight  , \r\n                            'text-decoration': item.text_decoration ,\r\n                            'font-style': item.font_style  ,\r\n                            'top.px': item.type == 'price' && i == listRowBarcode.length -1 ? item.y -2 : item.y,\r\n                            'left.px':item.x,\r\n                            'height.mm': item.height ,\r\n                            'width.mm': item.width,\r\n                            'justify-content':item.type == 'barcode' ? item.justify_content : '',\r\n                            'z-index':item.z_index,\r\n                            'display': item.status ? 'flex' : 'none'\r\n                            }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                               \r\n                                'text-align':item.text_align,\r\n                                'height.mm': item.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"item.type != 'barcode' && item.type != 'price' && item.status\">{{item.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': item.white_space,\r\n                               'font-family': item.font_family, \r\n                                   \r\n                                    'text-align':item.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  item.type == 'price' && item.status\">{{vhAlgorithm.vhcurrencyunit_symbol(item.value)}}</span>\r\n                            <svg [ngStyle]=\"{'height.mm': item.height,'width.mm': item.width}\"\r\n                                *ngIf=\"item.type == 'barcode' && item.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</nz-layout>","import { VhComponent } from 'src/app/sales/components/vh-component/vh-component';\r\nimport { VhAlgorithm, VhQuery } from 'ionic-vhframeworks';\r\nimport { Component, OnInit, ChangeDetectorRef, Input, SimpleChanges } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport jsbarcode from 'jsbarcode';\r\nimport printJS from 'print-js';\r\nimport { Platform } from '@ionic/angular';\r\ndeclare var electron: any;\r\n\r\n@Component({\r\n  selector: 'app-print-two-col',\r\n  templateUrl: './print-two-col.component.html',\r\n  styleUrls: ['./print-two-col.component.scss']\r\n})\r\nexport class PrintTwoColComponent implements OnInit {\r\n  @Input() start_print : boolean = false\r\n  @Input() stamp: any;\r\n  listOfFontSize = [8, 9, 10, 11, 12, 13, 14, 15, 16];\r\n  number = 1;\r\n  listRowBarcode = [false]; // chứa số hàng hiển thị. true thì hiển thị 2 tem. false là hien thị 1 tem trên 1 hàng\r\n  heightScroll :any;\r\n  propertySelected: any;\r\n  constructor(\r\n    private router: Router,\r\n    public vhAlgorithm: VhAlgorithm,\r\n    private cdf: ChangeDetectorRef,\r\n    private vhComponent:VhComponent,\r\n    private vhQuery:VhQuery,\r\n    public platform: Platform\r\n  ) {\r\n    // this.stamp = this.router.getCurrentNavigation().extras.state;\r\n    // this.stamp.barcode.property =  this.vhAlgorithm.sortNumberbyASC(this.stamp.barcode.property,'y')\r\n  }\r\n\r\n  ngOnChanges({start_print}: SimpleChanges): void {\r\n   if(start_print && start_print.currentValue) {\r\n     this.vhComponent.showLoading('')\r\n     .then(() =>{\r\n      this.stamp.barcode.property =  this.vhAlgorithm.sortNumberbyASC(this.stamp.barcode.property,'y')\r\n      for(let item of this.stamp.barcode.property){\r\n        switch(item.type){\r\n          case 'barcode-text': item.value = this.stamp.formProduct.barcode;break;\r\n          case 'price': item.value = this.stamp.formProduct.price;break;\r\n          case 'barcode': item.value = this.stamp.formProduct.barcode;break;\r\n          case 'name': item.value = this.stamp.formProduct.name;break;\r\n        }\r\n      }\r\n      this.propertySelected = this.stamp.barcode.property[0];\r\n      this.changeNummber()\r\n      setTimeout(() => {\r\n        this.renderBarcode(); \r\n      }, 1000);\r\n      setTimeout(() => {\r\n        this.vhComponent.hideLoading(0)\r\n        this.printBrowser();\r\n      }, 3000);\r\n     })\r\n    \r\n   }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  changeNummber() {\r\n    this.listRowBarcode = []\r\n    for (let i = 0; i < this.stamp.number/2; i++) {\r\n     if(this.stamp.number%2 ==0)  this.listRowBarcode.push(true);\r\n     else {\r\n       if(i == (this.stamp.number-1)/2) this.listRowBarcode.push(false);\r\n       else this.listRowBarcode.push(true);\r\n     }\r\n    }\r\n  }\r\n \r\n  renderBarcode() {\r\n    if(this.stamp.formProduct.barcode)\r\n    jsbarcode(\".barcode\",  this.stamp.formProduct.barcode, {\r\n      displayValue: false,\r\n      // height: 65\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/sales/dashboard/manage/design-barcode/detail'],{state: this.stamp.barcode})\r\n  } \r\n  Print() {\r\n    if (this.platform.is(\"electron\")) this.printElectron()\r\n    else this.printBrowser()\r\n  }\r\n  printElectron() {\r\n    let html = document.getElementById(\"stamp-barcode-electron\").innerHTML;\r\n    electron.ipcRenderer.send(\"print-start\", {\r\n      html: html,\r\n      deviceName: this.stamp.printer_name,\r\n      \r\n    });\r\n    electron.ipcRenderer.on(\"print-done\", (event, data) => {\r\n      if (!data) this.vhComponent.alertMessageDesktop('warning', 'Printing failed', 3000)\r\n     \r\n    });\r\n  }\r\n  printBrowser() {\r\n    printJS({\r\n      printable: \"stamp-barcode\",\r\n      type: \"html\",\r\n      scanStyles: false,\r\n      maxWidth: this.stamp.width,\r\n      style:\r\n        '@page { margin: 0 !important;padding: 0 !important;}' +\r\n        '.stamp {margin-bottom: 3mm; width: ' + this.stamp.width + 'mm;height: ' + (this.stamp.height - 4) + 'mm;}' +\r\n        '.center-all-content { display: flex;align-items: center;justify-content: center;}'\r\n    });\r\n  }\r\n\r\n}\r\n","\r\n<nz-layout>\r\n    \r\n    <div nz-row style=\"height: 100%;padding-top: 16px;\" id=\"scroll\">\r\n        <div nz-col nzSpan=\"24\" class=\" center-all-content hideScrollbar\" style=\"overflow: auto;padding-top: 16px;\"\r\n            [ngStyle]=\"{'height.px': heightScroll}\">\r\n            <div id=\"stamp-barcode\" style=\"height: 100%;margin-top: -1.5mm;\">\r\n                <div [ngStyle]=\"{'width.mm': stamp.barcode.width*stamp.col,'height.mm': stamp.barcode.height -3,'margin-bottom':i == listRowBarcode.length -1 ? '0' : ''}\" class=\"stamp mb-6\"\r\n                    style=\"display: flex;margin-left: -1mm;\" *ngFor=\"let item of listRowBarcode, index as i\">\r\n                    <div [ngStyle]=\"{'width.mm': stamp.barcode.width,'height.mm': stamp.barcode.height -3}\"  style=\"position: relative;\" class=\"border-top\"\r\n                        >\r\n                        <div  \r\n                            *ngFor=\"let pro of stamp.barcode.property, index as idx\"  \r\n                            style=\" position: absolute;align-items: center;overflow: hidden;\"  \r\n                            [ngStyle]=\"{\r\n                            'text-align': pro.text_align,\r\n                            'font-size.px': pro.font_size, \r\n                            'font-weight': pro.font_weight  , \r\n                            'text-decoration': pro.text_decoration ,\r\n                            'font-style': pro.font_style  ,\r\n                            'top.px': pro.type == 'price' && i == listRowBarcode.length -1 ? pro.y -2 : pro.y,\r\n                            'left.px':pro.x,\r\n                            'height.mm': pro.height ,\r\n                            'width.mm': pro.width,\r\n                            'justify-content':pro.type == 'barcode' ? pro.justify_content : '',\r\n                            'z-index':pro.z_index,\r\n                            'display': pro.status ? 'flex' : 'none'\r\n                            }\"\r\n                            [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\"\r\n                            >\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                'border': propertySelected == item ? '1px dashed gray' : 'none',\r\n                                'text-align':pro.text_align,\r\n                                'height.mm': pro.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"pro.type != 'barcode' && pro.type != 'price' && pro.status\">{{pro.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                    'border': propertySelected == item ? '1px dashed gray' : 'none',\r\n                                    'text-align':pro.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  pro.type == 'price' && pro.status\">{{vhAlgorithm.vhcurrencyunit_symbol(pro.value)}}</span>\r\n                            <canvas [ngStyle]=\"{'height.mm': pro.height,'width.mm': pro.width}\"\r\n                                *ngIf=\"pro.type == 'barcode' && pro.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div [ngStyle]=\"{'width.mm': stamp.barcode.width,'height.mm': stamp.barcode.height -3}\" *ngIf=\"item\" style=\"position: relative;\"  class=\"border-top\"\r\n                         >\r\n                        <div  \r\n                            *ngFor=\"let pro of stamp.barcode.property, index as idx\"  \r\n                            style=\" position: absolute;align-items: center;overflow: hidden;\" \r\n                             [ngStyle]=\"{\r\n                             'text-align': pro.text_align,\r\n                             'font-size.px': pro.font_size, \r\n                             'font-weight': pro.font_weight  , \r\n                             'text-decoration': pro.text_decoration ,\r\n                             'font-style': pro.font_style  ,\r\n                             'top.px': pro.type == 'price' && i == listRowBarcode.length -1 ? pro.y -2 : pro.y,\r\n                             'left.px':pro.x,\r\n                             'height.mm': pro.height ,\r\n                             'width.mm': pro.width,\r\n                             'justify-content':pro.type == 'barcode' ? pro.justify_content : '',\r\n                             'z-index':pro.z_index,\r\n                             'display': pro.status ? 'flex' : 'none'\r\n                             }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                             <span [ngStyle]=\"{\r\n                                'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                'border': propertySelected == item ? '1px dashed gray' : 'none',\r\n                                'text-align':pro.text_align,\r\n                                'height.mm': pro.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"pro.type != 'barcode' && pro.type != 'price' && pro.status\">{{pro.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                    'border': propertySelected == item ? '1px dashed gray' : 'none',\r\n                                    'text-align':pro.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  pro.type == 'price' && pro.status\">{{vhAlgorithm.vhcurrencyunit_symbol(pro.value)}}</span>\r\n                             <canvas [ngStyle]=\"{'height.mm': pro.height,'width.mm': pro.width}\"\r\n                                 *ngIf=\"pro.type == 'barcode' && pro.status\" class=\"barcode\"></canvas>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div id=\"stamp-barcode-electron\" style=\"margin-top: -1.5mm;display: none;\">\r\n                <div [ngStyle]=\"{'width.mm': stamp.barcode.width*stamp.col,'height.mm': stamp.barcode.height -3,'margin-bottom':i == listRowBarcode.length -1 ? '0' : ''}\" class=\"stamp mb-6\"\r\n                    style=\"display: flex;margin-left: -1mm;\" *ngFor=\"let item of listRowBarcode, index as i\">\r\n                    <div [ngStyle]=\"{'width.mm': stamp.barcode.width,'height.mm': stamp.barcode.height -3}\"  style=\"position: relative;\" class=\"border-top\"\r\n                        >\r\n                        <div  \r\n                            *ngFor=\"let pro of stamp.barcode.property, index as idx\"  \r\n                            style=\" position: absolute;align-items: center;overflow: hidden;\"  \r\n                            [ngStyle]=\"{\r\n                            'text-align': pro.text_align,\r\n                            'font-size.px': pro.font_size, \r\n                            'font-weight': pro.font_weight  , \r\n                            'text-decoration': pro.text_decoration ,\r\n                            'font-style': pro.font_style  ,\r\n                            'top.px': pro.type == 'price' && i == listRowBarcode.length -1 ? pro.y -2 : pro.y,\r\n                            'left.px':pro.x,\r\n                            'height.mm': pro.height ,\r\n                            'width.mm': pro.width,\r\n                            'justify-content':pro.type == 'barcode' ? pro.justify_content : '',\r\n                            'z-index':pro.z_index,\r\n                            'display': pro.status ? 'flex' : 'none'\r\n                            }\"\r\n                            [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\"\r\n                            >\r\n                            <span [ngStyle]=\"{\r\n                                'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                'border': propertySelected == item ? '1px dashed gray' : 'none',\r\n                                'text-align':pro.text_align,\r\n                                'height.mm': pro.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"pro.type != 'barcode' && pro.type != 'price' && pro.status\">{{pro.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                    'border': propertySelected == item ? '1px dashed gray' : 'none',\r\n                                    'text-align':pro.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  pro.type == 'price' && pro.status\">{{vhAlgorithm.vhcurrencyunit_symbol(pro.value)}}</span>\r\n                            <svg [ngStyle]=\"{'height.mm': pro.height,'width.mm': pro.width}\"\r\n                                *ngIf=\"pro.type == 'barcode' && pro.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div [ngStyle]=\"{'width.mm': stamp.barcode.width,'height.mm': stamp.barcode.height -3}\" *ngIf=\"item\" style=\"position: relative;\"  class=\"border-top\"\r\n                         >\r\n                        <div  \r\n                            *ngFor=\"let pro of stamp.barcode.property, index as idx\"  \r\n                            style=\" position: absolute;align-items: center;overflow: hidden;\" \r\n                             [ngStyle]=\"{\r\n                             'text-align': pro.text_align,\r\n                             'font-size.px': pro.font_size, \r\n                             'font-weight': pro.font_weight  , \r\n                             'text-decoration': pro.text_decoration ,\r\n                             'font-style': pro.font_style  ,\r\n                             'top.px': pro.type == 'price' && i == listRowBarcode.length -1 ? pro.y -2 : pro.y,\r\n                             'left.px':pro.x,\r\n                             'height.mm': pro.height ,\r\n                             'width.mm': pro.width,\r\n                             'justify-content':pro.type == 'barcode' ? pro.justify_content : '',\r\n                             'z-index':pro.z_index,\r\n                             'display': pro.status ? 'flex' : 'none'\r\n                             }\" [ngClass]=\"{'border-bot' : idx == stamp.barcode.property.length -1}\">\r\n                             <span [ngStyle]=\"{\r\n                                'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                'border': propertySelected == item ? '1px dashed gray' : 'none',\r\n                                'text-align':pro.text_align,\r\n                                'height.mm': pro.height\r\n                            }\"\r\n                                style=\" overflow: hidden;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"pro.type != 'barcode' && pro.type != 'price' && pro.status\">{{pro.value}}</span>\r\n                            <span\r\n                                [ngStyle]=\"{\r\n                                    'white-space': pro.white_space,\r\n                               'font-family': pro.font_family, \r\n                                    'border': propertySelected == item ? '1px dashed gray' : 'none',\r\n                                    'text-align':pro.text_align}\"\r\n                                style=\" height: 100%;line-height: 1;width: 100%;\"\r\n                                *ngIf=\"  pro.type == 'price' && pro.status\">{{vhAlgorithm.vhcurrencyunit_symbol(pro.value)}}</span>\r\n                             <svg [ngStyle]=\"{'height.mm': pro.height,'width.mm': pro.width}\"\r\n                                 *ngIf=\"pro.type == 'barcode' && pro.status\" class=\"barcode\"></svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</nz-layout>"],"names":[],"sourceRoot":"webpack:///"}