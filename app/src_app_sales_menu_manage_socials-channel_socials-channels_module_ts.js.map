{"version":3,"file":"src_app_sales_menu_manage_socials-channel_socials-channels_module_ts.js","mappings":";;;;;;;;;;;;;;;;;AAMO,MAAM,eAAe;IAC1B,yCAAyC;IACzC,YACU,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAGxB,CAAC;IACD;;;OAGG;IACH,IAAI,CAAC,eAAgC;QACnC,IAAI;YACF,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC;gBAC7B,KAAK,EAAE,eAAe;gBACtB,MAAM,EAAE,IAAI;gBACZ,KAAK,EAAE,IAAI;gBACX,OAAO,EAAE,OAAO;aACjB,CAAC,CAAC,CAAC;SACL;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC;SAC3B;IACH,CAAC;IACD;;;;;;;;OAQG;IACH,cAAc;QACZ,OAAO,IAAI,OAAO,CAAM,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC1C,EAAE,CAAC,cAAc,CAAC,CAAC,QAAa,EAAE,EAAE;gBAClC,IAAI,CAAC,QAAQ;oBAAE,MAAM,EAAE;;oBAClB,OAAO,CAAC,QAAQ,CAAC,CAAC;YACzB,CAAC,EAAE,IAAI,CAAC;QACV,CAAC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,aAAa,CAAC,WAAoB;QAChC,OAAO,IAAI,OAAO,CAAM,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC1C,EAAE,CAAC,KAAK,CAAC,CAAC,QAAa,EAAE,EAAE;gBAEzB,IAAI,QAAQ,CAAC,YAAY,EAAE;oBACzB,OAAO,CAAC,QAAQ,CAAC;iBAClB;;oBAAM,MAAM,EAAE;YACjB,CAAC,EAAE;gBACD,KAAK,EAAE,WAAW,IAAI,gJAAgJ;gBACtK,aAAa,EAAE,IAAI,CAAC,gEAAgE;aACrF,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD,oGAAoG;IAEpG;;;;OAIG;IACH,cAAc;QACZ,OAAO,IAAI,OAAO,CAAM,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC1C,EAAE,CAAC,MAAM,CAAC,CAAC,QAAa,EAAE,EAAE;gBAC1B,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IACD;;;OAGG;IACH,eAAe;QACb,IAAI;YAEF,OAAO,EAAE,CAAC,eAAe,EAAE;SAC5B;QAAC,OAAO,GAAG,EAAE;SAEb;IACH,CAAC;IAED,OAAO;QACL,EAAE,CAAC,MAAM,CAAC,WAAW,CACnB,UAAU,IAAS;YACjB,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,GAAG,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QACxE,CAAC,CACF,CAAC;IACJ,CAAC;IACD;;;;;;;;;OASG;IACH,0BAA0B,CAAC,MAAc,EAAE,WAAmB;QAC5D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,IAAI,MAAM,WAAW,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,WAAW,EAAE,EAAE,CAAC,QAAa,EAAE,EAAE;gBACpF,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,wBAAwB;IACxB,sBAAsB,CAAC,OAAe,EAAE,iBAAyB;QAC/D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,IAAI,OAAO,WAAW,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,4CAA4C,EAAE,YAAY,EAAE,iBAAiB,EAAE,EAAE,CAAC,QAAa,EAAE,EAAE;gBACjJ,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QAEJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;;OAKG;IACH,+BAA+B,CAAC,YAAoB;QAClD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,KAAK,EAAE,EAAE,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,8BAA8B,EAAE,YAAY,EAAE,YAAY,EAAE,EAAE,CAAC,QAAa,EAAE,EAAE;gBACtI,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QAEJ,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,cAAc,CAAC,OAAe,EAAE,iBAAyB;QACvD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,IAAI,OAAO,kBAAkB,EAAE,MAAM,EAAE,EAAE,iBAAiB,EAAE,eAAe,EAAE,YAAY,EAAE,iBAAiB,EAAE,EAAE,CAAC,QAAa,EAAE,EAAE;gBACvI,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;OAEG;IACH,qBAAqB,CAAC,OAAe,EAAE,iBAAyB;QAC9D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,IAAI,OAAO,kBAAkB,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,iBAAiB,EAAE,EAAE,CAAC,QAAa,EAAE,EAAE;gBAClG,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,iBAAiB,CAAC,IAAY,EAAE,iBAAyB;QACvD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,0CAA0C,EAAE,YAAY,EAAE,iBAAiB,EAAE,EAAE,CAAC,QAAa,EAAE,EAAE;gBACnI,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;;;;;;;;;;;;;;;OAkBG;IACH,yBAAyB,CAAC,iBAAyB,EAAE,IAAS;QAC5D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,kBAAI,YAAY,EAAE,iBAAiB,IAAK,IAAI,GAAI,CAAC,QAAa,EAAE,EAAE;gBAC7F,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD,gBAAgB,CAAC,iBAAyB;QACxC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,iBAAiB,EAAE,EAAE,CAAC,QAAa,EAAE,EAAE;gBACnF,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;;OAKG;IACH,qBAAqB,CAAC,iBAAyB,EAAE,OAAe;QAC9D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,IAAI,OAAO,gBAAgB,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,iBAAiB,EAAE,EAAE,CAAC,QAAa,EAAE,EAAE;gBAChG,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;;;OAMG;IACH,8BAA8B,CAAC,iBAAyB,EAAE,cAAsB;QAC9E,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,IAAI,cAAc,EAAE,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,iBAAiB,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,4DAA4D,EAAE,EAAE,CAAC,QAAa,EAAE,EAAE;gBAC1K,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,2BAA2B,CAAC,iBAAyB,EAAE,SAAiB,EAAE,MAAe;QACvF,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,IAAI,SAAS,EAAE,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,IAAI,+CAA+C,EAAE,EAAE,CAAC,QAAa,EAAE,EAAE;gBACvJ,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;OAIG;IACH,aAAa,CAAC,IAAY;QACxB,+EAA+E;QAC/E,IAAI,GAAG,GAAG,IAAI;QACd,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,QAAa,EAAE,EAAE;gBACnC,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED;;;;;;;;;;;;;;;;;;;;OAoBG;IACH,gBAAgB,CAAC,iBAAyB,EAAE,GAAW,EAAE,QAAgB;QACvE,IAAI,IAAI,GAAG;YACT,GAAG,EAAE,gBAAgB;YACrB,cAAc,EAAE,aAAa;YAC7B,SAAS,EAAE;gBACT,EAAE,EAAE,QAAQ;aACb;YACD,OAAO,EAAE;gBACP,UAAU,EAAE;oBACV,IAAI,EAAE,OAAO;oBACb,OAAO,EAAE;wBACP,WAAW,EAAE,IAAI;wBACjB,GAAG,EAAE,GAAG;qBACT;iBACF;aACF;SACF;QACD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,6BAA6B,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,QAAa,EAAE,EAAE;gBACvF,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;;OAKG;IACH,oBAAoB,CAAC,iBAAyB,EAAE,OAAe;QAC7D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,GAAG,OAAO,OAAO,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,iBAAiB,EAAE,EAAE,CAAC,QAAa,EAAE,EAAE;gBACtF,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;;OAKG;IACH,kBAAkB,CAAC,iBAAyB,EAAE,OAAe;QAC3D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,IAAI,OAAO,qBAAqB,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,iBAAiB,EAAE,KAAK,EAAE,uBAAuB,EAAE,WAAW,EAAE,QAAQ,EAAE,EAAE,CAAC,QAAa,EAAE,EAAE;gBAC5J,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;;OAKG;IACH,aAAa,CAAC,iBAAyB,EAAE,OAAe;QACtD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,GAAG,OAAO,cAAc,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,iBAAiB,EAAE,EAAE,CAAC,QAAa,EAAE,EAAE;gBAC7F,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;;OAKG;IAEH,cAAc,CAAC,iBAAyB,EAAE,OAAe;QACvD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,GAAG,OAAO,SAAS,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,iBAAiB,EAAE,MAAM,EAAE,+EAA+E,EAAE,EAAE,CAAC,QAAa,EAAE,EAAE;gBACjL,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;;OAKG;IACH,mBAAmB,CAAC,iBAAyB,EAAE,YAAoB;QACjE,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,GAAG,YAAY,EAAE,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,iBAAiB,EAAE,MAAM,EAAE,6MAA6M,EAAE,EAAE,CAAC,QAAa,EAAE,EAAE;gBAC7S,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,cAAc,CAAC,iBAAyB,EAAE,UAAkB;QAC1D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,IAAI,UAAU,EAAE,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,iBAAiB,EAAE,MAAM,EAAE,uMAAuM,EAAE,EAAE,CAAC,QAAa,EAAE,EAAE;gBACtS,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;;;;;;;;;OAYG;IACH,iBAAiB,CAAC,iBAAyB,EAAE,UAAkB,EAAE,IAAS;QACxE,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,IAAI,UAAU,iBAAiB,iBAAiB,EAAE,EAAE,MAAM,oBAAO,IAAI,GAAI,CAAC,QAAa,EAAE,EAAE;gBAChG,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;;OAKG;IACH,iBAAiB,CAAC,iBAAyB,EAAE,UAAkB;QAC7D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,IAAI,UAAU,iBAAiB,iBAAiB,EAAE,EAAE,QAAQ,EAAE,CAAC,QAAa,EAAE,EAAE;gBACrF,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;;OAKG;IACH,WAAW,CAAC,MAAc,EAAE,YAAoB;QAC9C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,IAAI,MAAM,iBAAiB,YAAY,EAAE,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,wCAAwC,EAAE,EAAE,CAAC,QAAa,EAAE,EAAE;gBAC/H,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;OAIG;IACH,0BAA0B,CAAC,uBAA+B;QACxD,kBAAkB;QAClB,kCAAkC;QAElC,kBAAkB;QAClB,kCAAkC;QAClC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,oEAAoE,eAAe,kBAAkB,kCAAkC,sBAAsB,uBAAuB,EAAE,EAAE,KAAK,EAAE,CAAC,QAAa,EAAE,EAAE;gBACtN,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;;OAKG;IACH,0BAA0B,CAAC,sBAA8B,EAAE,MAAc;QACvE,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,UAAU,MAAM,0BAA0B,sBAAsB,EAAE,EAAE,KAAK,EAAE,CAAC,QAAa,EAAE,EAAE;gBAClG,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;;;OAMG;IACH,2BAA2B,CAAC,sBAA8B,EAAE,OAAe;QACzE,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,IAAI,OAAO,yBAAyB,sBAAsB,iBAAiB,EAAE,KAAK,EAAE,CAAC,QAAa,EAAE,EAAE;gBAC3G,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;OAGG;IACH,kBAAkB,CAAC,QAAa,EAAE,MAAc;QAC9C,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,sBAAsB,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC;IAC3E,CAAC;IACD;;;OAGG;IACH,qBAAqB;QACnB,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,sBAAsB,CAAC;IAC5D,CAAC;IACD;;;OAGG;IACH,cAAc,CAAC,MAAe;QAC5B,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,iBAAiB,EAAE,MAAM,CAAC;QACtD,IAAI,CAAC,MAAM;YAAE,IAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE,CAAC;IAC9C,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,iBAAiB,CAAC;IACvD,CAAC;IACD;;;OAGG;IACH,kBAAkB,CAAC,IAAS;QAC1B,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,sBAAsB,EAAE,IAAI,CAAC;IAC3D,CAAC;IACD,kBAAkB;QAChB,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,sBAAsB,CAAC;IAC5D,CAAC;IAED;;;;;OAKG;IACH,4CAA4C,CAAC,iBAAyB,EAAE,IAAS;QAC/E,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,KAAK,CAAC,wEAAwE,iBAAiB,EAAE,EAAE;gBACjG,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,MAAM;aACf,CAAC,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;gBACnB,IAAI,GAAG;oBAAE,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;wBAChC,OAAO,CAAC,MAAM,CAAC;oBACjB,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC;YAC1B,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC;QAC1B,CAAC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,iBAAiB,CAAC,iBAAyB,EAAE,YAAoB,EAAE,aAAqB;QACtF,IAAI,IAAI,GAAQ;YACd,WAAW,EAAE;gBACX,EAAE,EAAE,YAAY;aACjB;YACD,SAAS,EAAE;gBACT,YAAY,EAAE;oBACZ,MAAM,EAAE,OAAO;oBACf,SAAS,EAAE;wBACT,eAAe,EAAE,aAAa;qBAC/B;iBACF;aACF;YACD,KAAK,EAAE,gBAAgB;YACvB,gBAAgB,EAAE,aAAa;SAChC;QACD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,6DAA6D,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,QAAa,EAAE,EAAE;gBACvH,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;;OAKG;IACH,aAAa,CAAC,iBAAyB,EAAE,UAAkB;QACzD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,UAAU,UAAU,SAAS,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,iBAAiB,EAAE,MAAM,EAAE,gCAAgC,EAAE,EAAE,CAAC,QAAa,EAAE,EAAE;gBAC5I,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;;OAKG;IACH,eAAe,CAAC,iBAAyB,EAAE,OAAe,EAAE,OAAe;QACzE,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,IAAI,OAAO,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,iBAAiB,EAAE,MAAM,EAAE,sOAAsO,EAAE,EAAE,CAAC,QAAa,EAAE,EAAE;gBAC9U,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,mBAAmB,CAAC,iBAAyB,EAAE,UAAkB;QAC/D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,IAAI,UAAU,qBAAqB,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,iBAAiB,EAAE,KAAK,EAAE,uBAAuB,EAAE,WAAW,EAAE,QAAQ,EAAE,EAAE,CAAC,QAAa,EAAE,EAAE;gBAC/J,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;;;OAMG;IACH,sBAAsB,CAAC,iBAAyB,EAAE,UAAkB,EAAE,IAAa;QACjF,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,IAAI,UAAU,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,EAAE,YAAY,EAAE,iBAAiB,EAAE,EAAE,CAAC,QAAa,EAAE,EAAE;gBACnH,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;;;;;;OASG;IACH,wBAAwB,CAAC,iBAAyB,EAAE,UAAkB,EAAE,IAAS;QAC/E,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,IAAI,UAAU,0BAA0B,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,QAAa,EAAE,EAAE;gBAClG,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;;;;;;OASG;IACH,yBAAyB,CAAC,UAAkB,EAAE,IAAS;QACrD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,KAAK,CAAC,oCAAoC,UAAU,WAAW,EAAE;gBAC/D,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,MAAM;aACf,CAAC,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;gBACnB,IAAI,GAAG;oBAAE,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;wBAChC,OAAO,CAAC,MAAM,CAAC;oBACjB,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC;YAC1B,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC;QAC1B,CAAC,CAAC;IACJ,CAAC;IACD;;;;;;;;;;;;;;OAcG;IACH,4BAA4B,CAAC,iBAAyB,EAAE,IAAS;QAC/D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,6BAA6B,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,QAAa,EAAE,EAAE;gBACvF,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD;;;;;;OAMG;IACH,sBAAsB,CAAC,iBAAyB,EAAE,IAAY,EAAE,aAAuD;QACrH,IAAI,IAAI,GAAQ;YACd,SAAS,EAAE;gBACT,EAAE,EAAE,IAAI;aACT;YACD,aAAa,EAAE,aAAa;SAC7B;QAED,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,GAAG,CAAC,6BAA6B,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,QAAa,EAAE,EAAE;gBACvF,IAAI,QAAQ;oBAAE,OAAO,CAAC,QAAQ,CAAC;;oBAC1B,MAAM,EAAE;YACf,CAAC,CAAC;YACF,4FAA4F;YAC5F,+BAA+B;YAC/B,0BAA0B;YAC1B,yCAAyC;YACzC,sBAAsB;YACtB,6BAA6B;YAC7B,2BAA2B;QAC7B,CAAC,CAAC;IACJ,CAAC;;8EA/tBU,eAAe;gHAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOb,MAAM,wBAAwB;IAEnC,YACU,SAA0B,EAC1B,MAAc,EACd,WAAwB,EACxB,IAAqB;QAHrB,cAAS,GAAT,SAAS,CAAiB;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,SAAI,GAAJ,IAAI,CAAiB;IAC3B,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE;IACjB,CAAC;IACD,QAAQ;QACN,gFAAgF;QAChF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAC9C,2FAA2F;YAC3F,IAAI,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE;gBAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kDAAkD,CAAC,CAAC;iBAC3G;gBACH,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;oBAChD,IAAI,GAAG,CAAC,MAAM,IAAI,WAAW;wBAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kDAAkD,CAAC,CAAC;yBACpG;wBACH,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,8DAA8D,CAAC,GAAG,GAAG,CAAC;wBAC1I,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yDAAyD,CAAC,CAAC;qBAClF;gBACH,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,GAAG,GAAG,CAAC,CAAC;aAC1G;QACH,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;IACtB,CAAC;;gGA3BU,wBAAwB;sHAAxB,wBAAwB;QCXrC,wEACU;;;QADD,oKAAoC;;;;;;;;;;;;;;;;;;;;;;;;ACCE;AACyB;AACjB;AACV;AACS;AACS;AACuB;;;AAEtF,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,+FAAuB;KACnC;IACD;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,iFAAwB;KACpC;IACD;QACE,IAAI,EAAE,UAAU;QAChB,YAAY,EAAE,GAAG,EAAE,CAAC,2MAAoC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC;KACrF;CACF;AAYM,MAAM,qBAAqB;;0FAArB,qBAAqB;kHAArB,qBAAqB;sHARvB;YACP,yDAAY;YACZ,kEAAqB,CAAC,MAAM,CAAC;YAC7B,yEAAgB;YAChB,uDAAW;YACX,gEAAe;SAChB;mIAEU,qBAAqB,mBATjB,iFAAwB,EAAE,+FAAuB,aAE9D,yDAAY,6DAEZ,yEAAgB;QAChB,uDAAW;QACX,gEAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBZ,MAAM,uBAAuB;IAElC,YACU,SAA0B,EAC1B,MAAc,EACd,WAAwB,EACxB,IAAqB,EACrB,YAAmC,EACnC,MAAa;QALb,cAAS,GAAT,SAAS,CAAiB;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,SAAI,GAAJ,IAAI,CAAiB;QACrB,iBAAY,GAAZ,YAAY,CAAuB;QACnC,WAAM,GAAN,MAAM,CAAO;IACnB,CAAC;IAEL,QAAQ;IACR,CAAC;IACD;;OAEG;IACH,aAAa;QACX,qCAAqC;QACrC,wBAAwB;QACtB,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACxC,IAAI,GAAG,CAAC,MAAM,IAAI,WAAW;gBAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kDAAkD,CAAC,CAAC;;gBACpG,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;QAC/F,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACrB,IAAI;QACJ,SAAS;QACT,sBAAsB;QACtB,cAAc;QACd,YAAY;QACZ,qGAAqG;QACrG,QAAQ;QACR,iCAAiC;QAEjC,UAAU;QACV,IAAI;IAEN,CAAC;;8FAnCU,uBAAuB;qHAAvB,uBAAuB;QCbpC,yEAAoC;QAChC,yEAA0E;QACtE,yEAAoB;QAChB,oEAAoE;QACpE,qEAAI;QAAA,uDAA+D;;QAAA,4DAAK;QACxE,uEAAM;QAAA,uDAAsD;;QAAA,4DAAO;QACvE,4DAAM;QACV,4DAAM;QACN,0EAAyE;QACrE,0EAAsE;QAAjE,6IAAS,mBAAe,IAAC;QAC1B,0EAAkB;QAAA,8DACyB;QADzB,0EACyB;QACnC,sEAA2D;QAC3D,sEAEwB;QAC5B,4DAAM;QAAA,4DAAM;QAChB,+DAAmB;QAAnB,2EAAmB;QACf,uEAAK;QAAA,qEAAG;QAAA,oEAAQ;QAAA,4DAAI;QAAA,4DAAM;QAC1B,uEAAK;QAAA,wDAAsG;;QAAA,4DAAM;QACrH,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAnBU,0DAA+D;QAA/D,iLAA+D;QAC7D,0DAAsD;QAAtD,wKAAsD;QAcnD,2DAAsG;QAAtG,yNAAsG","sources":["./src/app/sales/menu/manage/socials-channel/services/facebook.service.ts","./src/app/sales/menu/manage/socials-channel/socials-channels.component.ts","./src/app/sales/menu/manage/socials-channel/socials-channels.component.html","./src/app/sales/menu/manage/socials-channel/socials-channels.module.ts","./src/app/sales/menu/manage/socials-channel/socials-connect/socials-connect.component.ts","./src/app/sales/menu/manage/socials-channel/socials-connect/socials-connect.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { VhAuth } from 'ionic-vhframeworks';\r\ndeclare var FB: any;\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FacebookService {\r\n  // FB.api(path, method, params, callback)\r\n  constructor(\r\n    private vhAuth: VhAuth\r\n  ) {\r\n\r\n  }\r\n  /**\r\n   * Khởi tạo sdk với id\r\n   * @param id_facebook_app  //id này lấy ở app trên facebook\r\n   */\r\n  init(id_facebook_app: string | number): Promise<any> {\r\n    try {\r\n      return Promise.resolve(FB.init({\r\n        appId: id_facebook_app,\r\n        status: true,\r\n        xfbml: true,\r\n        version: 'v19.0'\r\n      }));\r\n    } catch (err) {\r\n      return Promise.reject(err)\r\n    }\r\n  }\r\n  /**\r\n   * Xác định người dùng đã đăng nhập vào facebook hay chưa\r\n   * Có 3 TH có thể xảy ra\r\n   * TH1 : connected : user đã đăng nhập và ủy quyền truy cập , lúc này chỉ cần lấy userID và accessToken\r\n   * TH2 : not_authorized : user đã đăng nhập vào fb nhưng chưa cấp quyền cho ứng dụng, lúc này cần gọi hàm login\r\n   * TH3 : unknown : user chưa đăng nhập, phải gọi hàm login\r\n   * NOTE : cần check status trước, lưu thông tin vào session tránh để call api này quá nhiều lần\r\n   * @returns Promise<any>\r\n   */\r\n  getLoginStatus(): Promise<any> {\r\n    return new Promise<any>((resolve, reject) => {\r\n      FB.getLoginStatus((response: any) => {\r\n        if (!response) reject()\r\n        else resolve(response);\r\n      }, true)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Đăng nhập facebook dùng sau khi hàm getLoginStatus trả kết quả là not_authorized hoặc unknown\r\n   * @param permissions : những quyền người dùng cần cấp thêm cho app\r\n   * @returns nếu đăng nhập thành công thì sẽ trả về response nếu không sẽ trả về lỗi, nghĩa là user không đăng nhập \r\n   * hoặc không cấp quyền\r\n   */\r\n  loginFacebook(permissions?: string): Promise<any> {\r\n    return new Promise<any>((resolve, reject) => {\r\n      FB.login((response: any) => {\r\n        \r\n        if (response.authResponse) {\r\n          resolve(response)\r\n        } else reject()\r\n      }, {\r\n        scope: permissions || 'pages_messaging,pages_show_list,pages_manage_metadata,pages_read_engagement,pages_read_user_content,pages_manage_engagement,pages_manage_posts',\r\n        return_scopes: true // trong response sẽ trả về danh sách những quyền mà user đã cấp\r\n      })\r\n    })\r\n  }\r\n  // manage_pages,pages_manage_ads,pages_manage_metadata,pages_read_engagement,pages_read_user_content\r\n\r\n  /**\r\n   * Đăng xuất facebook khỏi app\r\n   * Lưu ý đăng xuất facebook khỏi app chứ trong trang facebook.com vẫn bình thường\r\n   * @returns \r\n   */\r\n  logoutFacebook(): Promise<any> {\r\n    return new Promise<any>((resolve, reject) => {\r\n      FB.logout((response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      });\r\n    })\r\n  }\r\n  /**\r\n   * Hàm này là hàm ĐỒNG BỘ dùng để get AuthResponse(bao gồm userID, accessToken...)\r\n   * Note: chỉ được dùng hàm này khi đã chắc chắn user đăng nhập rồi, khi load lại trang tuyệt đối k dùng hàm này\r\n   */\r\n  getAuthResponse(): any {\r\n    try {\r\n      \r\n      return FB.getAuthResponse()\r\n    } catch (err) {\r\n      \r\n    }\r\n  }\r\n\r\n  getPage() {\r\n    FB.Canvas.getPageInfo(\r\n      function (info: any) {\r\n        alert('Width: ' + info.clientWidth + ' Height: ' + info.clientHeight);\r\n      }\r\n    );\r\n  }\r\n  /**\r\n   * hàm này trả về tất cả các page(accesstoken,infoPage...) của user, trong đó có task của user trong từng page\r\n   * example : let info = this.fbService.getAuthResponse()\r\n              this.fbService.getPageAccessTokenByUserID(info.userID, info.accessToken).then(res => {\r\n                \r\n              }).catch(err => \r\n   * @param userID \r\n   * @param accessToken \r\n   * @returns \r\n   */\r\n  getPageAccessTokenByUserID(userID: string, accessToken: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/${userID}/accounts`, 'GET', { access_token: accessToken }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n\r\n  /**Hàm này để xem lại */\r\n  getPageMultipleMetrics(page_id: string, page_access_token: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/${page_id}/insights`, 'GET', { metric: 'page_impressions_unique,page_engaged_users', access_token: page_access_token }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n\r\n    })\r\n  }\r\n  /**\r\n   * Lấy thông tin page như id, name, địa chỉ , link\r\n   * Note : cần chờ facebook xác thực quyền\r\n   * @param access_token \r\n   * @returns \r\n   */\r\n  getInformationPageByAccessToken(access_token: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/pages/search`, 'GET', { q: 'Facebook', fields: 'id,name,location,link,photos', access_token: access_token }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Hàm thiết lập kết nối webhook\r\n   */\r\n  connectWebhook(page_id: string, page_access_token: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/${page_id}/subscribed_apps`, 'POST', { subscribed_fields: 'feed,messages', access_token: page_access_token }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * Hàm get thiết lập kết nối webhook\r\n   */\r\n  getInfoConnectWebhook(page_id: string, page_access_token: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/${page_id}/subscribed_apps`, 'GET', { access_token: page_access_token }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Hàm lấy thông tin user qua PSID, sử dụng cho trường hợp webhook bắn event trả về\r\n   * @param PSID \r\n   * @param page_access_token \r\n   * @returns id,name,first_name,last_name,profile_pic\r\n   */\r\n  getInfoUserByPSID(PSID: string, page_access_token: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/${PSID}`, 'GET', { fields: 'id,name,first_name,last_name,profile_pic', access_token: page_access_token }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * Gửi tin nhắn dạng text cho user\r\n   * @param page_access_token \r\n   * @param body \r\n   * @example let body = {\r\n      messaging_type: \"RESPONSE\",\r\n      recipient: {\r\n        id: \"4762454490487027\"\r\n      },\r\n      message: {\r\n        text: \"Hello world!\"\r\n      }\r\n    }\r\n    this.fbService.sendMessageToUserTypeText(\"EAAIUrNe1KZCABABIISF6ZBJ89hSLO9fCRYQ0Qcrl2WNbgoVM3iJZCTuZBL2xBNoZC9Xi8kE1sd8wpDTPoJrKs4GWCBpkFnzpLZB2PNZAZAjZC0AgT3WqdFP7pjpukmVp0Wcp0pI05F2zzgAN4DnvXZBUU3q1YxQvbAAPt6ZCKeiy4EmMrsOyeEZBB0VWS6sFjO5cYGVSuGh4exdZCmCVYhLW97ZAYi\", body).then(res => {\r\n      \r\n    }).catch(err => \r\n  }\r\n   * @returns \r\n   */\r\n  sendMessageToUserTypeText(page_access_token: string, body: any): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/me/messages`, 'POST', { access_token: page_access_token, ...body }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  getMessageToUser(page_access_token: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/me/messages`, 'GET', { access_token: page_access_token }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * Lấy danh sách các cuộc hội thoại, mỗi id tương ứng với 1 cuộc hội thoại\r\n   * @param page_access_token \r\n   * @param page_id \r\n   * @returns \r\n   */\r\n  getListConversationID(page_access_token: string, page_id: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/${page_id}/conversations`, 'GET', { access_token: page_access_token }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * Lấy danh sách dựa tin nhắn dựa trên conversation\r\n   * @ffields messages,message_count,participants,senders\r\n   * @param page_access_token \r\n   * @param conversationID \r\n   * @returns \r\n   */\r\n  getListMessageByConversationID(page_access_token: string, conversationID: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/${conversationID}`, 'GET', { access_token: page_access_token, limit: 50, fields: 'messages,message_count,participants,unread_count,can_reply' }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Lấy chi tiết tin nhắn\r\n   * @param page_access_token \r\n   * @param messageID \r\n   * @param after \r\n   * @param fields story,from,to,message,attachments\r\n   * @returns \r\n   */\r\n  getMessageDetailByMessageID(page_access_token: string, messageID: string, fields?: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/${messageID}`, 'GET', { access_token: page_access_token, fields: fields || 'story,from,to,message,attachments,shares,tags' }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * Lấy dữ liệu của trang tiếp theo\r\n   * @param next \r\n   * @returns \r\n   */\r\n  getNextPaging(next: string): Promise<any> {\r\n    //cắt bỏ chuỗi https://graph.facebook.com/v19.0, với 32 là độ dài chuỗi url này\r\n    let url = next\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(url, 'GET', (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @param page_access_token \r\n   * @param data \r\n   * @note : lưu ý hình ảnh phải convert sang url để upload\r\n   * @example : * let body = {\r\n      messaging_type: \"RESPONSE\",\r\n      recipient: {\r\n        id: \"4762454490487027\"\r\n      },\r\n      message: {\r\n        attachment: {\r\n          type: \"image\",\r\n          payload: {\r\n            is_reusable: true,\r\n            url: \"https://previews.123rf.com/images/vectorshots/vectorshots1211/vectorshots121100267/16104680-smile-icon-vector.jpg\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n   * @returns \r\n   */\r\n  sendImageWithUrl(page_access_token: string, url: string, senderID: string): Promise<any> {\r\n    let body = {\r\n      tag: \"ACCOUNT_UPDATE\",\r\n      messaging_type: \"MESSAGE_TAG\",\r\n      recipient: {\r\n        id: senderID\r\n      },\r\n      message: {\r\n        attachment: {\r\n          type: \"image\",\r\n          payload: {\r\n            is_reusable: true,\r\n            url: url\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/me/messages?access_token=${page_access_token}`, 'POST', body, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * Lấy tất cả bài đăng trong page\r\n   * @param page_access_token \r\n   * @param page_id \r\n   * @returns \r\n   */\r\n  getAllPostInPageByID(page_access_token: string, page_id: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`${page_id}/feed`, 'GET', { access_token: page_access_token }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * Lấy tất cả comment ở dạng test\r\n   * @param page_access_token \r\n   * @param post_id \r\n   * @returns \r\n   */\r\n  getCommentByPostID(page_access_token: string, post_id: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/${post_id}/comments?summary=1`, 'GET', { access_token: page_access_token, order: 'reverse_chronological', total_count: 'stream' }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * \r\n   * @param page_access_token \r\n   * @param page_id \r\n   * @returns \r\n   */\r\n  pageChatLogin(page_access_token: string, page_id: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`${page_id}/chat_plugin`, 'GET', { access_token: page_access_token }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * Lấy album ảnh của page dựa vào page_id\r\n   * @param page_access_token \r\n   * @param page_id \r\n   * @returns \r\n   */\r\n\r\n  getAlbumInPage(page_access_token: string, page_id: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`${page_id}/albums`, 'GET', { access_token: page_access_token, fields: 'backdated_time,count,created_time,description,from,link,name,comments,picture' }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * Lấy chi tiết các bài post dựa vào page_post_id\r\n   * @param page_access_token \r\n   * @param page_post_id \r\n   * @returns \r\n   */\r\n  getPageFeedByPageID(page_access_token: string, page_post_id: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`${page_post_id}`, 'GET', { access_token: page_access_token, fields: 'actions,admin_creator,attachments,child_attachments,created_time,feed_targeting,from,full_picture,icon,message,message_tags,parent_id,permalink_url,properties,status_type,story,subscribed,to,updated_time' }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Lấy chi tiết comment theo id\r\n   * @param page_access_token \r\n   * @param comment_id \r\n   * @returns \r\n   */\r\n  getCommentByID(page_access_token: string, comment_id: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/${comment_id}`, 'GET', { access_token: page_access_token, fields: 'attachment,can_comment,can_remove,can_hide,can_like,can_reply_privately,comment_count,created_time,from,like_count,message,message_tags,object,parent,private_reply_conversation,user_likes,is_hidden' }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * Cập nhật comment, thường dùng hàm này để ẩn comment\r\n   * @param page_access_token \r\n   * @param comment_id \r\n   * @param body \r\n   * @example let body = {\r\n      is_hidden: true\r\n    }\r\n    this.fbService.updateCommentByID(\"abc\", \"107282545132151_107296281797444\", body).then(res => {\r\n      \r\n    }).catch(err => \r\n   * @returns \r\n   */\r\n  updateCommentByID(page_access_token: string, comment_id: string, body: any): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/${comment_id}?access_token=${page_access_token}`, 'POST', { ...body }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * Hàm này dùng để xóa comment theo ID\r\n   * @param page_access_token \r\n   * @param comment_id \r\n   * @returns \r\n   */\r\n  deleteCommentByID(page_access_token: string, comment_id: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/${comment_id}?access_token=${page_access_token}`, 'DELETE', (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * Hàm này để lấy thông tin của user\r\n   * @param userID \r\n   * @param access_token \r\n   * @returns \r\n   */\r\n  getInfoUser(userID: string, access_token: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/${userID}?access_token=${access_token}`, 'GET', { fields: 'id,name,picture.width(400).height(400)' }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * Lấy access_token thời hạn lâu dành cho user\r\n   * @param short_live_access_token \r\n   * @returns \r\n   */\r\n  getLongLiveAccessTokenUser(short_live_access_token: string): Promise<any> {\r\n    // 807938100918626\r\n    //33477c365cbbb5aebd0e678a7dbb3bc1\r\n\r\n    // 951006302165608\r\n    //043c870398b650244761099fda588cb5\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/v19.0/oauth/access_token?grant_type=fb_exchange_token&client_id=${807938100918626}&client_secret=${'c01f433d25acac9d86838f08f5166907'}&fb_exchange_token=${short_live_access_token}`, 'GET', (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * Lấy access token dành cho page thời hạn lâu\r\n   * @param long_access_token_user \r\n   * @param userId \r\n   * @returns \r\n   */\r\n  getLongLiveAccessTokenPage(long_access_token_user: string, userId: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/v19.0/${userId}/accounts?access_token=${long_access_token_user}`, 'GET', (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * Lấy ảnh đại diện của user/page\r\n   * Lưu ý nếu truyền page_id thì trả về đại diện của page, ngược lại truyền userID sẽ trả về đại diện của user\r\n   * @param long_access_token_user \r\n   * @param page_id \r\n   * @returns \r\n   */\r\n  getProfileIamgeOfUserOrPage(long_access_token_user: string, page_id: string) {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/${page_id}/picture?access_token=${long_access_token_user}&redirect=false`, 'GET', (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * Lưu vào danh sách list đã connect\r\n   * @param listPage \r\n   */\r\n  setListPageConnect(listPage: any, userID: string) {\r\n    this.vhAuth.localStorageSET('fb_list_page_connect', { userID, listPage })\r\n  }\r\n  /**\r\n   * Hàm này để lấy ra những page đã connect\r\n   * @returns listPage\r\n   */\r\n  getListAccountConnect() {\r\n    return this.vhAuth.localStorageGET('fb_list_page_connect')\r\n  }\r\n  /**\r\n   * Đăng nhập đăng xuất, nếu đăng xuất thì clear listpageConnect\r\n   * @param status \r\n   */\r\n  setStatusLogin(status: boolean) {\r\n    this.vhAuth.localStorageSET('fb_login_status', status)\r\n    if (!status) this.setListPageConnect({}, '')\r\n  }\r\n\r\n  getStatusLogin() {\r\n    return this.vhAuth.localStorageGET('fb_login_status')\r\n  }\r\n  /**\r\n   * Set thông tin user connect\r\n   * @param user \r\n   */\r\n  setInfoUserConnect(user: any) {\r\n    this.vhAuth.localStorageSET('fb_info_user_connect', user)\r\n  }\r\n  getInfoUserConnect() {\r\n    return this.vhAuth.localStorageGET('fb_info_user_connect')\r\n  }\r\n\r\n  /**\r\n   * Hàm này để update hình ảnh và nhận về attachment_id, mục đích lấy attachment_id để gửi tin nhắn hình ảnh, file\r\n   * @param page_access_token \r\n   * @param data \r\n   * @returns attachment_id\r\n   */\r\n  updateImageToSendMessageAndReceiveAttachment(page_access_token: string, data: any): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`https://graph.facebook.com/v19.0/me/message_attachments?access_token=${page_access_token}`, {\r\n        body: data,\r\n        method: 'post'\r\n      }).then((res: any) => {\r\n        if (res) res.json().then(result => {\r\n          resolve(result)\r\n        }).catch(() => reject())\r\n      }).catch(() => reject())\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Hàm này để update hình ảnh và nhận về attachment_id, mục đích lấy attachment_id để gửi tin nhắn hình ảnh, file\r\n   * @param page_access_token \r\n   * @param data \r\n   * @returns attachment_id\r\n   */\r\n  sendImageFromFile(page_access_token: string, id_recipient: string, attachment_id: string): Promise<any> {\r\n    let json: any = {\r\n      \"recipient\": {\r\n        id: id_recipient\r\n      },\r\n      \"message\": {\r\n        \"attachment\": {\r\n          \"type\": \"image\",\r\n          \"payload\": {\r\n            \"attachment_id\": attachment_id\r\n          }\r\n        }\r\n      },\r\n      \"tag\": \"ACCOUNT_UPDATE\",\r\n      \"messaging_type\": \"MESSAGE_TAG\",\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`https://graph.facebook.com/v19.0/me/messages?access_token=${page_access_token}`, 'POST', json, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * hàm này để lấy các message đặc biệt như sticker hay message có gắn link\r\n   * @param page_access_token \r\n   * @param message_id \r\n   * @returns \r\n   */\r\n  getLinkShares(page_access_token: string, message_id: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/v19.0/${message_id}/shares`, 'GET', { access_token: page_access_token, fields: 'link,name,description,template' }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * Lấy chi tiết các bài post dựa vào id_post\r\n   * @param page_access_token \r\n   * @param id_post \r\n   * @returns \r\n   */\r\n  getPostByIdPost(page_access_token: string, page_id: string, post_id: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/${page_id}_${post_id}/`, 'GET', { access_token: page_access_token, fields: 'id,actions,application,can_reply_privately,child_attachments,coordinates,created_time,expanded_height,expanded_width,feed_targeting,from,full_picture,height,icon,is_expired,is_hidden,message,message_tags,permalink_url,properties' }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Lấy các reply-comment\r\n   * @param page_access_token \r\n   * @param comment_id \r\n   * @returns \r\n   */\r\n  getReplyCommentByID(page_access_token: string, comment_id: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/${comment_id}/comments?summary=1`, 'GET', { access_token: page_access_token, order: 'reverse_chronological', total_count: 'stream' }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * Lấy các reply-comment\r\n   * @param page_access_token \r\n   * @param comment_id \r\n   * @param like\r\n   * @returns \r\n   */\r\n  likeCommentByCommentId(page_access_token: string, comment_id: string, like: boolean): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/${comment_id}/likes`, `${like ? 'DELETE' : 'POST'}`, { access_token: page_access_token }, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * Reply bình luận facebook\r\n   * @param page_access_token \r\n   * @param comment_id \r\n   * @param json = {\r\n        message: \"@{user id}This is a test comment\",\r\n        attachment_id : 123456789\r\n    },\r\n   * @returns \r\n   */\r\n  replyCommentFacebookText(page_access_token: string, comment_id: string, json: any): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/${comment_id}/comments?access_token=${page_access_token}`, \"POST\", json, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * Reply bình luận facebook\r\n   * @param page_access_token \r\n   * @param comment_id \r\n   * @param json = {\r\n        message: \"@{user id}This is a test comment\",\r\n        attachment_id : 123456789\r\n    },\r\n   * @returns \r\n   */\r\n  replyCommentFacebookImage(comment_id: string, json: any): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`https://graph.facebook.com/v19.0/${comment_id}/comments`, {\r\n        body: json,\r\n        method: 'POST'\r\n      }).then((res: any) => {\r\n        if (res) res.json().then(result => {\r\n          resolve(result)\r\n        }).catch(() => reject())\r\n      }).catch(() => reject())\r\n    })\r\n  }\r\n  /**\r\n   * Reply comment private message\r\n   * @param page_access_token \r\n   * @param comment_id \r\n   * @param json = \r\n   * {\r\n   * recipient: {\r\n        comment_id: \"4762454490487027\"\r\n      },\r\n      message: {\r\n        text: \"Hello world!\"\r\n      }\r\n    \r\n   * @returns \r\n   */\r\n  replyPrivateMessageOnComment(page_access_token: string, json: any): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/me/messages?access_token=${page_access_token}`, \"POST\", json, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * Đánh dấu tin nhắn đã đọc\r\n   * @param page_access_token \r\n   * @param PSID \r\n   * @param sender_action ='mark_seen,typing_on,typing_off'\r\n   * @returns \r\n   */\r\n  displayingSenderAction(page_access_token: string, PSID: string, sender_action: 'mark_seen' | 'typing_on' | 'typing_off'): Promise<any> {\r\n    let json: any = {\r\n      recipient: {\r\n        id: PSID\r\n      },\r\n      sender_action: sender_action\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      FB.api(`/me/messages?access_token=${page_access_token}`, \"POST\", json, (response: any) => {\r\n        if (response) resolve(response)\r\n        else reject()\r\n      })\r\n      // fetch(`https://graph.facebook.com/v19.0/me/messages?access_token=${page_access_token}`, {\r\n      //   body: json, method: 'POST'\r\n      // }).then((res: any) => {\r\n      //   if (res) res.json().then(result => {\r\n      //     resolve(result)\r\n      //   }).catch(() => reject())\r\n      // }).catch(() => reject())\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { VhComponent } from 'src/app/sales/components/vh-component/vh-component';\r\nimport { LanguageService } from 'src/app/sales/services/language.service';\r\nimport { FacebookService } from './services/facebook.service';\r\n\r\n@Component({\r\n  selector: 'app-socials-channels',\r\n  templateUrl: './socials-channels.component.html',\r\n  styleUrls: ['./socials-channels.component.scss']\r\n})\r\nexport class SocialsChannelsComponent implements OnInit {\r\n\r\n  constructor(\r\n    private fbService: FacebookService,\r\n    private router: Router,\r\n    private vhComponent: VhComponent,\r\n    private lang: LanguageService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initData()\r\n  }\r\n  initData() {\r\n    //Khởi tạo facebook sdk, nghiên cứu lại chỗ khởi tạo fb nên đặt ở đâu là phù hợp\r\n    this.fbService.init(807938100918626).then(res => {\r\n      //Sau khởi tạo là lấy thông tin đăng nhập, nếu đã đăng nhập thì navigate sang trang quản lý\r\n      if (this.fbService.getAuthResponse()) this.router.navigate(['/sales/dashboard/manage/socials-channel/facebook'])\r\n      else {\r\n        this.fbService.getLoginStatus().then((res: any) => {\r\n          if (res.status == 'connected') this.router.navigate(['/sales/dashboard/manage/socials-channel/facebook'])\r\n          else {\r\n            this.vhComponent.alertMessageDesktop('warning', this.lang.translate('Bạn chưa đăng nhập hoặc tài khoản của bạn chưa được ủy quyền') + '!')\r\n            this.router.navigate(['/sales/dashboard/manage/socials-channel/socials-connect'])\r\n          }\r\n        }).catch(() => this.vhComponent.alertMessageDesktop('error', this.lang.translate('Có lỗi xảy ra') + '!'))\r\n      }\r\n    }).catch(err => { })\r\n  }\r\n}\r\n","<nz-spin nzTip=\"{{'Loading' | translate}}...\">\r\n</nz-spin>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SocialsChannelsComponent } from './socials-channels.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { NgZorroAntModule } from 'src/app/ng-zorro-ant.module';\r\nimport { SocialsConnectComponent } from './socials-connect/socials-connect.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'socials-connect',\r\n    component: SocialsConnectComponent\r\n  },\r\n  {\r\n    path: '',\r\n    component: SocialsChannelsComponent\r\n  },\r\n  {\r\n    path: 'facebook',\r\n    loadChildren: () => import('./facebook/facebook.module').then(m => m.FacebookModule)\r\n  },\r\n]\r\n\r\n@NgModule({\r\n  declarations: [SocialsChannelsComponent, SocialsConnectComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    NgZorroAntModule,\r\n    IonicModule,\r\n    TranslateModule\r\n  ]\r\n})\r\nexport class SocialsChannelsModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { VhAuth } from 'ionic-vhframeworks';\r\nimport { NzNotificationService } from 'ng-zorro-antd/notification';\r\nimport { VhComponent } from 'src/app/sales/components/vh-component/vh-component';\r\nimport { LanguageService } from 'src/app/sales/services/language.service';\r\nimport { FacebookService } from '../services/facebook.service';\r\n\r\n@Component({\r\n  selector: 'app-socials-connect',\r\n  templateUrl: './socials-connect.component.html',\r\n  styleUrls: ['./socials-connect.component.scss']\r\n})\r\nexport class SocialsConnectComponent implements OnInit {\r\n\r\n  constructor(\r\n    private fbService: FacebookService,\r\n    private router: Router,\r\n    private vhComponent: VhComponent,\r\n    private lang: LanguageService,\r\n    private notification: NzNotificationService,\r\n    private vhAuth:VhAuth\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  /**\r\n   * Hàm này để bắt sự kiện click vào facebook và mở trang đăng nhập faceboook\r\n   */\r\n  loginFacebook() {\r\n    // let check = this.vhAuth.getStore()\r\n    // if (check.isTester) {\r\n      this.fbService.loginFacebook().then(res => {\r\n        if (res.status == 'connected') this.router.navigate(['/sales/dashboard/manage/socials-channel/facebook'])\r\n        else this.vhComponent.alertMessageDesktop('error', this.lang.translate('Bạn chưa đăng nhập'))\r\n      }).catch(() => { })\r\n    // }\r\n    // else {\r\n    //   this.notification\r\n    //     .blank(\r\n    //       \"\",\r\n    //       this.lang.translate(\"Vui lòng liên hệ hotline 0934 60 60 60 để sử dụng chức năng này\") + \".\"\r\n    //     )\r\n    //     .onClick.subscribe(() => {\r\n          \r\n    //     });\r\n    // }\r\n    \r\n  }\r\n}\r\n","<div nz-row class=\"socials-channel\">\r\n    <div nz-col nzSpan=\"10\" class=\"socials-channel-banner center-all-content\">\r\n        <div class=\"banner\">\r\n            <img src=\"assets/icon/management/socials-channel/banner.svg\" alt=\"\">\r\n            <h3>{{'Choose the social channel you want to connect' | translate}}</h3>\r\n            <span>{{'You can connect channels at any time' | translate}}</span>\r\n        </div>\r\n    </div>\r\n    <div nz-col nzSpan=\"14\" class=\"socials-channel-login center-all-content\">\r\n        <div (click)=\"loginFacebook()\" class=\"socials-channel-login-facebook\">\r\n            <div class=\"icon\"><svg width=\"53\" height=\"53\" viewBox=\"0 0 53 53\" fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <rect width=\"53\" height=\"53\" rx=\"10\" fill=\"#1B80E4\"></rect>\r\n                    <path\r\n                        d=\"M27.1266 53V32.3539H21V24.9203H27.1266V18.5711C27.1266 13.5818 30.7457 9 39.0847 9C42.461 9 44.9577 9.28842 44.9577 9.28842L44.761 16.2301C44.761 16.2301 42.2148 16.208 39.4363 16.208C36.4291 16.208 35.9473 17.4429 35.9473 19.4925V24.9203H45L42.6998 32.3539H35.9473V53H27.1266Z\"\r\n                        fill=\"white\"></path>\r\n                </svg></div>\r\n            <div class=\"title\">\r\n                <div><b>Facebook</b></div>\r\n                <div>{{\"Optimize time and efficiency in closing orders on the world's largest social network\" | translate}}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"],"names":[],"sourceRoot":"webpack:///"}